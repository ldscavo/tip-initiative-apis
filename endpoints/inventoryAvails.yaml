openapi: "3.0.0"
components:
 securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
info:
  version: 5.0.0
  title: Inventory Avails
  description: Inventory Endpoints
  termsOfService: http://placeholderdomain.io/terms/
  contact:
    name: TIP Initiative
    email: tipinitiative@frontrowadvisory.com
    url: http://placeholderdomain.io
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: http://placeholderdomain.io

paths:
  /buyer/inventoryAvails:
    post:
      tags:
        - Buyer
      summary: Send the request for the inventory avails required
      description: >-
        This endpoint is hosted at the seller end, Allows the Buyer as part of campaign planning
        to initiate an Inventory Request to Seller. The payload of the request can either be:<br/>
        NOTE#1: For New Request --> transactionNum.transactionType=New<br/>
        NOTE#2: for Changing a previously submitted request --> <br/>
        <li>transactionNum.transactionType=Change<br/>
        <li>originalTransactionNum object must be provided
      operationId: inventoryAvailsBuyers
      requestBody:
        description: Send the request for the inventory avails required
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/inventoryAvailsSchemas.yaml#/components/schemas/InventoryAvailsBuyerObject'
      responses:
        '200':
          description: Request processed successfully. Response is provided synchronously
          content:
            application/json:
              schema:
                $ref: 'schemas/inventoryAvailsSchemas.yaml#/components/schemas/InventoryAvailsSellerObject'
        '202':
          description: Request was accepted, Response will be provided asynchronously.
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/AcceptedResponse'
        default:
          description: unexpected error, return the appropriate and corresponding HTTP status code matching the error
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/Error'
  /buyer/inventoryAvails/cancel:
    post:
      tags:
        - Buyer
      summary: Cancel inventory Avails request
      description: >-
        This endpoint will be hosted at the seller side.
        This endpoint allows the buyer to request from the seller to cancel and ignore
        a previously communicated inventoryAvails request. As Follows:<br/>
        NOTE#1: originalTransactionNum values needs to indicate which request is to be cancelled.<br/>
        NOTE#2: transactionNum.transactionType = Cancel<br/>
        NOTE#3: originalTransactionNum.transactionNum must refer to the transaction in question to be cancelled

      operationId: inventoryAvailsBuyersCancel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/commonSchemas.yaml#/components/schemas/TransactionHeader'
      responses:
        '200':
          description: Request processed successfully
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/AcceptedResponse'
        default:
          description: unexpected error, return the appropriate and corresponding HTTP status code matching the error
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/Error'
  /seller/inventoryAvails:
    post:
      tags:
        - Seller
      summary: Seller POSTs the Inventory Avails information to the buyer's system
      description: >
        This endpoint will be hosted at the buyer side,
        Allows the Seller to send inventory criteria such as Stations, Selling Elements, Inventory Types, Pricing, Audience Estimates
        either solicited or unsolicited
      operationId: inventoryAvailsSellers
      requestBody:
        description: Seller POSTs the the Inventory Avails information to the buyer's system
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/inventoryAvailsSchemas.yaml#/components/schemas/InventoryAvailsSellerObject'
      responses:
        '200':
          description: Request processed successfully
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/AcceptedResponse'
        default:
          description: unexpected error, return the appropriate and corresponding HTTP status code matching the error
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/Error'
  /seller/inventoryAvails/cancel:
    post:
      tags:
        - Seller
      summary: Cancel inventory Avails Request
      description: >-
        This endpoint will be hosted at the buyer side.
        This endpoint allows the buyer to request from the seller to cancel and ignore
        a previously communicated inventoryAvails request. As Follows:<br/>
        NOTE#1:originalTransactionNum values needs to indicate which request is to be cancelled.<br/>
        NOTE#2: transactionNum.transactionType = Cancel<br/>
        NOTE#3: originalTransactionNum.transactionNum must refer to the transaction in question to be cancelled

      operationId: inventoryAvailsSellerCancel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/commonSchemas.yaml#/components/schemas/TransactionHeader'
      responses:
        '200':
          description: Request processed successfully
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/AcceptedResponse'
        default:
          description: unexpected error, return the appropriate and corresponding HTTP status code matching the error
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/Error'

