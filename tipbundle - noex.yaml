openapi: 3.0.0
info:
  version: 6.0.0
  title: Trading Interface Automation Framework For Local TV Transactions.
  description: "# Television Interface Practices Initiative (TIP)\n\nTrading Interface Automation Framework For Local TV Transactions.\n\n## Confidentiality Note\n\nThe detailed Workflow and API Framework in this document has been\nsynthesized from several technology vendor contributions. The contributions\nhighlighted the broad adoption of commonly used specs and in some cases,\nthere was an original work contribution from the TIP Initiative and\nFrontrow Advisory.  The TIP Initiative has thoroughly reviewed this\ndocument to ensure details have been appropriately abstracted and\nsynthesized.  This report does not include any specific proprietary work\nfrom a single technology vendor or source.\n\n## Version History\n\n| Version | Date | Author |\n|---------|------|--------|\n|0.1.0|\t09/25/17|\tInitial Draft\tTIP Initiative / Frontrow Advisory|\n|0.2.0|\t10/09/17|\tInitial Draft\tTIP Initiative / Frontrow Advisory|\n|1.0.0|\t11/11/17|\tRelease \tTIP Initiative / Frontrow Advisory|\n|1.1.0|\t02/22/17|\tDraft\tTIP Initiative / Frontrow Advisory|\n|2.0.0|\t04/06/17|\tRelease \tTIP Initiative / Frontrow Advisory|\n|2.1.0|\t06/29/18|\tDraft\tTIP Initiative / Frontrow Advisory|\n|3.0.0|\t10/23/18|\tRelease\tTIP Initiative / Frontrow Advisory|\n|3.1.0|\t02/01/19|\tRelease\tTIP Initiative / Frontrow Advisory|\n|4.0.0|\t05/16/19|\tRelease\tTIP Initiative / Frontrow Advisory|\n|4.2.0|\t01/24/20|\tRelease\tTIP Initiative / Frontrow Advisory|\n|4.3.0|\t04/01/20|\tDraft\tTIP Initiative / Frontrow Advisory|\n|5.0.0|\t05/05/20|\tRelease\tTIP Initiative / Frontrow Advisory|\n|5.1.0|\t08/13/20|\tRelease\tTIP Initiative / Frontrow Advisory|\n|6.0.0|\tTBD|\tThis draft \tTIP Initiative / Frontrow Advisory|\n\n## Release 6.0.0 Notes\n\n|Changes from Release 5.1.0. to Release 6.0.0.|\t\n|---------------------------------------------|\t\n|Added a new Identifier object to the common schemas \t\t|\n|Added a new AudienceTarget object to the common schemas to support video and cross platform sales \t\t|\n|Added a new FrequencyCapping object to the common schemas to support and cross platform sales \t\t|\n|Added a new Frequency object to the common schemas to support subscription frequency of receiving report \t\t|\n|Added a new DyanamicDate object to the common schemas to indicate the values to be used when calculating a start date, or end date relative to the report date \t\t|\n|Modified the PricingMetric common object in the common schema to support gross and net values \t\t|\n|Modified the MediaOutlet object in the common schema to support an array of mediaOutletId Identifiers\t\t|\n|Modified the MediaOutlet object in the common schema and changed the mediaOutletType format from enum constraints to string \t\t|\n|Modified the Advertiser object in the common schema to support an array of advertiserId Identifiers\t\t|\n|Modified the Brand object in the common schema to support an array of brandId Identifiers\t\t|\n|Modified the Buyer object in the common schema to support an array of buyerId Identifiers\t\t|\n|Modified the Product object in the common schema to support an array of productId Identifiers\t\t|\n|Modified the AudienceSegment in the common schema to support an array of audienceSegementIds identifiers\t\t|\n|Modified the AudienceSegment in the common schema and changed Boolean properties names to start with 'is' e.g. isPrimary\t\t|\n|Modified the PriceMetric Object in the common schema to support a new SPOT value in the enum constraints \t\t|\n|Modified the PricingMetric Object in the common schema to support a netValue in addition to the grossValue\t\t|\n|Modified the RateCard object in the common schema and added a currency property \t\t|\n|Modified the Guideline object in the common schema and removed the guidelineId property and changed guidelineName to guidelines to support an array of values \t\t|\n|Modified the DateWindow object in the common schema and changed the endDate from required to optional\t\t|\n|Modified the TimeWindow object in the common schema and changed the endTime from required to optional and removed the enum from the data type\t\t|\n|Modified the DayofWeek object in the common schema and changed Boolean property names to start with 'is' e.g.  isMonday, isTuesday, etc. \t\t|\n|Modified the DailyUnitDistribution object in the common schema to support a new pacingRule and modified the days in the week from required to optional\t\t|\n|Modified the SalesElement object in the common schema and changed the salesElement property name to salesElementHeader\t\t|\n|Modified the SalesElement object in the common schema and added a new devices property  \t\t|\n|Modified the SalesElement object in the common schema and changed salesElementInventories property name to to ElementInventorys to be consistent with array naming standards\t\t|\n|Modified the SalesElementInventory object in the common schema and added a new property for an array of companionTypeIds \t\t|\n|Modified the SalesElementInventoryDate and changed the dateType and calendarType from required to optional\t\t|\n|Modified the SalesElementTransaction object in the common schema to and changed salesElement to salesElementHeader, added new devices property, and and modified salesElementInventorys name to be consistent with array naming standards\t\t|\n|Modified the SalesElementTransactionInventory object in the common schema to support new properties for  lineReferences, companionTypeIds and changed the Boolean property names to start with 'is'\t\t|\n|Modified the SalesElementTransactionDate object in the common schema and added new properties to support frequencyCapping, pricingMetric, grossCost, netCost and audienceTargets\t\t|\n|Modified the distributionType in the RFP CampaignGoals to support a new Unit Length in the enum constraints \t\t|\n|Modified the Error object in the common schema to support a new errorList dictionary \t\t|\n|Modified the Event object in the common schema and changed boolean property names to start with 'is' \t\t|\n|Modified the BuyerInventoryAvails data model and removed dateSubmitted property\t\t|\n|Modified the BuyerInventoryAvails data model and changed all Boolean property names to start with 'is' \t\t|\n|Modified the SellerInventoryAvails data model and changed all Boolean property names to start with 'is' \t\t|\n|Modified the SellerProposals data model and changed all Boolean property names to start with 'is' \t\t|\n|Modified the BuyerProposals data model and changed all Boolean property names to start with 'is' \t\t|\n|Modified the BuyerOrders data model and changed all Boolean property names to start with 'is' and removed calendarType property\t\t|\n|Modified the BuyerCommercialInstructions and changed dateWindow from an array to a singular date\t\t|\n|Modified the BuyerCommercialInstructions and replaced the adId property with the creative object\t\t|\n|Modified the BuyerCommercialInstructions data model and removed name and length properties from InstructionDetail since are properties in the creative common schema\t\t|\n|Modified the SellerLogtimes data model to support an array of mediaOutlets objects\t\t|\n|Modified the SellerLogtimes data model in the Unit detail to support an array of lineReference identifiers\t\t|\n|Modified the SellerLogtimes data model and changed all Boolean properties to start with 'is' \t\t|\n|Modified the SellerLogtimes data model and changed the salesElement property name to salesElementHeader \t\t|\n|Modified the SellerLogTimes data model and replaced the adId property with the creative object\t\t|\n|Modified the SellerInvoices data model and added new properties to support  salesTax and discount \t\t|\n|Modified the SellerInvoices data model and added an array of mediaOutlets to the 'header' \t\t|\n|Modified the SellerInvoices data model and added array of lineReference identifiers to the lineDetails\t\t|\n|Modified the SellerInvoices data model and changed the name from salesElement to salesElementHeader\t\t|\n|Modified the SellerInvoices data model and added new properties to support pricingMetric, grossCost, NetCost, and audienceTargets to the LineDetail\t\t|\n|Modified the SellerInvoice data model to renamed the units property to unitCount \t\t|\n|Modified the SellerInvoice data model and changed all Boolean properties to begin with 'is' \t\t|\n|Added a new SellerAudience data model to the framework \t\t|\n|Added a new BuyerLogTimes/Subscribe data model to the framework to support a request and /or subscription to seller's logtimes\t\t|\n|Added a new BuyerAudience/Subscribe data model to the framework to support a request and /or subscription to seller's logtimes\t\t|\n|Added new BuyerImpressionsSubscribe data model to the framework \t\t    |\n\n## Release 5.1.0 Notes\n\n| Changes from Release 5.0.0 to Release 5.1.0 |\n|---------------------------------------------|\n| Added Transaction Type guidelines to framework |\n| Added new section to each tab to indicate the valid methods |\n| Added new common object to support budgetAllocations by budget type |\n| Added new common object to support budget amount and optional budgetAllocation common object |\n| Changed the budget property in RFP from Property to Object |\n| Added new budget common object to Proposal and Order |\n| Added new BuyerProposals to framework to support buyer change requests to a seller's proposal |\n| Changed SellerMakegoodOffers to support an array of preemptDetails and makegoodOfferDetails with the option to link preempt details to makegood offer or makegood offer(s) to preempt detail e.g. 1:1, 2:1, etc. |\n| Added external comments to the SalesElementTransactionInventory and SalesElementTransactionDate that may be used for overall comments and/or the change request rationale to a proposal or order |\n| Changed dealYear property in Proposal and Order from Integer to String |\n| Added new section to each tab to indicate the valid response codes |\n| Added mediaoutlet object to BuyerMakegoodGuidelines |\n| Added SellerImpressions (Video/OTT) |\n| Added new common objects to framework to support SellerImpressions |\n| Added JSON examples to Github |\n| Renamed several endpoint names to plural (Avails, RFPs, Proposals, Orders, Invoices) to follow OpenAPI naming conventions |\n| Added salesOffice to Contact common object |\n| Added SellerCommercialInstructions to the framework to support confirm or reject of commercial instructions |\n| BuyerOrderRecall - Now included in BuyerOrder |\n| SellerOrderConfirm - Now included in SellerOrder (NEW) |\n| SellerOrderReject - Now included in SellerOrder (NEW) |\n| SellerMakegoodRecall - Now included in SellerMakegoodOffer |\n| BuyerMakegoodConfirm - Now included in BuyerMakegoodOffer (NEW) |\n| BuyerMakegoodReject - Now included in BuyerMakegoodOffer (NEW) |\n| Changed ratingSource and ratingStream in the AudienceSegment common object from enums to strings |\n| Added type to the audiencePricingMetric common object that identifies the type of audience and /or pricing being provided (Selling, Actual or Projection) |\n| Added Report Window to Impressions |\n| Added new examples section |\n\n## Release 5.0.0 Notes\n\n| Changes from Release 4.2.0 to Release 5.0.0 | Source |\n|-------------------------------------------|--------|\n| Applied consistent style to Framework including lowerCamelCase | Vendor feedback |\n| SalesElement structures to define product catalog to support inventory avails and transactions | Vendor feedback |\n| Vendor sign-off of updates to Logtimes, Commercial Instructions, Invoices | Frontrow Advisory |\n| Implemented TimePeriod object | Vendor feedback |\n| Interface titles (tabs names) refer to \"sender/\" and \"interface\" (e.g. \"seller/ Logtimes\") | Vendor feedback |\n| Transitioned to DateTime in order to support Broadcast Date and Calendar Date/Time military (HH:MM:SS 24hrs) | Vendor feedback |\n| Changed TransactionId to a GUID | Vendor feedback |\n| Created common objects: <ul><li>audienceSegmentDetail</li><li>pricingMetricOption</li><li>audiencePricingMetricUniverse</li><li>currency</li><li>ratecard</li><li>dateTime</li><li>timePeriod</li><li>dayDistribution</li><li>inventoryPosition</li><li>inventoryType</li></ul> | Vendor feedback |\n\n### Updated Buyer endpoints:\n\n* /buyer/commercialInstructions\n\n### New Buyer endpoints:\n\n* /buyer/inventoryAvails (request)\n* /buyer/RFP\n* /buyer/order\n\n### Updated Seller endpoints:\n\n* /seller/logtimes\n* /seller/invoice\n\n### New Seller endpoints:\n\n* /seller/inventoryAvails (response)\n* /seller/proposal\n* /seller/orderConfirmReject\n\n## General Glossary\n\n| Term | Definition |\n|------|------------|\n| Advanced TV | Television paired with technology that allows for new features, components or uses Addressable, programmatic, over-the-top (OTT) and interactive are all subsets of advanced TV. |\n| Application Program Interface (API) | A set of routines, protocols, and tools for building software applications. The API specifies how software components should interact and are the building blocks to integrate systems and platforms to access data and perform operations. |\n| Alternate ID (AD ID) | A unique identifier for commercial copy assigned to most commercials by advertising agencies. |\n| Automated Ad Buying | Or programmatic, typically refers to the use of software to purchase digital advertising, as opposed to the traditional process that involves RFPs, human negotiations and manual insertion orders. The challenge for traditional media companies is the complexity of the process and terminology in digital programmatic. It’s basically using machines to buy ads. |\n| Air Date | Traditional linear broadcast of a commercial; also refers to the exact date that the commercial spot ran. |\n| Avail | Remaining unsold units of time for sale within a container, |\n| Bookend | A scheduling constraint defined for a pair of units on the same deal wherein the one unit should air in the first slot of a break and the second should air in the last slot of the same break. |\n| Brand | Name used to distinguish one product from its competitors. It can apply to a single product, an entire product line, or even a company. |\n| Cancellation Options | Included as part of national upfront negotiations that indicate a date and dollar amount by quarter in which the buyer may choose to exercise the cancellation of dollars. Movie accounts may have rolling cancellation dates |\n| Composition Index | Measures the concentration of a particular target group of consumers on a given website or ad network, compared to the concentration of that target in the total Internet population. |\n| CPM | Cost Per thousand - The cost of advertising per thousand potential customers reached by a given broadcast advertisement. |\n| CPP | Cost Per Rating Point - The cost of reaching one percent of the target audience within a specified geographic area. Used by many media planners in developing, setting, and allocating rating point goals for marketing budgets. |\n| Creative | Another name for commercial. |\n| Demographic (Demo) | Division of the audience into various segments. |\n| Data Management Platform (DMP) | Software that collects and organizes either a buyer’s or seller’s first-party audience data from its website or station feed to improve audience segmentation and enable targeting. |\n| Demand Side Platform (DSP) | Software platform that feeds a buyer’s media specifications onto an exchange, manages multiple exchange accounts and bids across those accounts. |\n| Electronic Data Interchange (EDI) | A communication technology used to transmit data from one system to another as a batch file exchange process. |\n| Estimate  | Reference code used in buying systems for reconciliation |\n| Equivalized | Units whose impressions are weighted down or up from 30-second impressions based on their ratio of their length to 30 seconds. For example, if a selling title has projected 30-second impressions of 50,000 for a particular demo, equivalized impressions for a 15-second unit would be 25,000 and for a 60-second unit would be 100,000. |\n| Goals | Goals are usually defined by the buyer at the time of the RPF and used as part of the negotiations between the buyer and seller. Goals could be as broad as overall campaign goal or broken down further into various segments, which usually are daypart. |\n| Interstitial | One of a series of short items broadcast between program segments. This term can refer to promos, vignettes, or any other short form of programming |\n| Inventory Type | Type of advertising inventory \"commercials\" |\n| Linear TV | A term used for real-time television services that are transmitted on a schedule. Most TV programs originate as linear TV but may become time-shifted for later viewing. |\n| Media Outlet | Station or network (seller) |\n| Piggyback | Back-to-back scheduling of two or more brand commercials of one advertiser in network or spot positions. |\n| Preemption | A term used when a unit does not air as originally scheduled. |\n| Private Marketplace | Programmatic trading environment in which a publisher makes available a segment of inventory to an advertiser at a defined price. |\n| Programmatic TV (PTV): | An automated, technology- or data-driven method of buying linear TV |\n| Rating Source | The rating source and data stream for the audience actuals e.g. Program Live, Commercial Rating +3, etc. |\n| Reach & Frequency | Number of households exposed to a broadcast media schedule (reach) multiplied by the number of time they are exposed (frequency). The result indicates total potential audience exposure in a given geographical area. |\n| Sandwich |\n| Service or Web Service | A software system designed to support interoperable machine-to-machine interaction over a network. |\n| Supply Side Platform (SSP) | Software platform that feeds a station’s inventory onto the Exchange and allows the station to manage their ad impressions and to maximize revenue. |\n| Time Separation | A limitation on an ad sales deal that requires units to be separated from themselves or other units in the same primary product category or for the same advertiser by a specified length of time; this may be by unit length or across lengths |\n| Trading Desk | The team executing the buys using a DSP. |\n| Universe | The total number of persons/homes in a given population. There are multiple types of universe e.g. Total US, cable coverage, market, zip code, etc. |\n| Upfront | A term indicating that an advertiser has purchased advertising for the coming broadcast year in an early buying season, typically for the benefit of lower rates and CPM guarantees |\n| Vignette | Any short item of programming that can be inserted in a program break. See also interstitial. |\n| VPVH | Viewers per viewing household – more common in national buys. |\n"
  termsOfService: 'http://placeholderdomain.io/terms/'
  contact:
    name: TIP Initiative
    email: tipinitiative@frontrowadvisory.com
    url: 'http://placeholderdomain.io'
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
servers:
  - url: 'http://placeholderdomain.io/v6.0.0'
security:
  - bearerAuth: []
paths:
  /buyer/inventoryAvails/subscription:
    post:
      tags:
        - Buyer
      summary: Allows the Buyer as part of campaign planning to initiate an Inventory Request to Seller
      description: 'This endpoint is hosted at the seller end. Allows the Buyer as part of campaign planning to initiate an Inventory Request to Seller.<br/> Supported Transaction Types:<br/> <lo>- New</lo>'
      operationId: BuyerInventoryAvails
      requestBody:
        description: Send the request for the inventory avails required
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuyerInventoryAvailsSubscription'
      responses:
        '200':
          description: OK - in case request can be fullfiled in realtime
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerInventoryAvails'
        '202':
          $ref: '#/components/responses/Accepted'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        default:
          $ref: '#/components/responses/Unexpected'
  /seller/inventoryAvails:
    post:
      tags:
        - Seller
      summary: 'Allows the Seller to post to the buyer their catalog of selling products, pricing and audience information'
      description: |
        This endpoint will be hosted at the buyer side. Allows the Seller to send Available Selling inventory by station, Selling Element, Inventory Types, Pricing, Audience Estimates either solicited or unsolicited<br/> Supported Transaction Types:<br/> <lo>- New</lo>
      operationId: SellerInventoryAvails
      requestBody:
        description: Seller POSTs the the Inventory Avails information to the buyer's system
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerInventoryAvails'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        default:
          $ref: '#/components/responses/Unexpected'
  /buyer/rfps:
    post:
      tags:
        - Buyer
      summary: 'Allows the buyer to submit a Request for Proposal (RFP) to the seller with media budget, goals and overall terms'
      description: 'This endpoint resides on the seller side. The purpose of the endpoint is to allow the buyer to send new RFP or cancel a previously sent request.<br/> Supported Transaction Types:<br/> <ul> <li>New - Send a new Request for Proposal using the BuyerRPFS schema</li> <li>Cancel - Send a cacellation of previously sent request</li> </ul>'
      operationId: BuyerRFPS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request Body for the endpoint varies based on Transaction type
              oneOf:
                - $ref: '#/components/schemas/BuyerRFPS'
                - $ref: '#/components/schemas/CancelConfirmRecallReject'
      responses:
        '202':
          $ref: '#/components/responses/Accepted'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        default:
          $ref: '#/components/responses/Unexpected'
  /seller/proposals:
    post:
      tags:
        - Seller
      summary: Create or Change a proposal in the buyers system
      description: "Allows the seller to respond back to the buyer with the detailed proposal for a given RFP or revised proposal; Multiple versions of a proposal can be under negotiation for the same campaign, but only one version may be executed; buyer must submit a \"Proposal Change Request\" for the last proposal version submission; seller must respond back with a Proposal Response that contains a new version number when submitting new versions. \_New Proposals may be submitted without a RFP Response<br/> <ul> <li>New - Create New proposal based on RFP or unsolicited</li> <li>Change - Make changes to previously sent proposal or responding to proposed chages suggested by the buyer</li> <li>Cancel - sending a cancel assumes that seller no longer wants the buyer to consider the proposal</li> <li>Recall - sending a Recall is asking the buyer to ignore changes communicated in the prior exchange.</li> <ul>"
      operationId: SellerProposals
      requestBody:
        description: 'Create, Change, Cancel, or Recall a proposal in the buyers system'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/paths/~1buyer~1proposals/post/requestBody/content/application~1json/schema'
      responses:
        '202':
          $ref: '#/components/responses/Accepted'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        default:
          $ref: '#/components/responses/Unexpected'
  /buyer/proposals:
    post:
      tags:
        - Buyer
      summary: Buyer change a proposal in the seller's system
      description: 'Allows the buyer to respond back to the seller with the proposed changeds for a given proposal; Multiple versions of a proposal can be under negotiation for the same campaign, but only one version may be executed; buyer must submit a ''Proposal Change'' for the last proposal version submitted; seller must respond back with a Proposal that contains a new version number when submitting the change<br/> Supported Transaction Type: Change, Recall'
      operationId: BuyerProposals
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request Body for the endpoint varies based on Transaction type
              oneOf:
                - $ref: '#/components/schemas/SellerProposals'
                - $ref: '#/components/schemas/CancelConfirmRecallReject'
      responses:
        '202':
          $ref: '#/components/responses/Accepted'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        default:
          $ref: '#/components/responses/Unexpected'
  /buyer/orders:
    post:
      tags:
        - Buyer
      summary: Create or Change an Order in the Seller System
      description: 'Allows the buyer to send the detailed information for a given order; execution is a summary of the sales elements details, thus allowing the seller to automatically create lines based on individual system''s rules. Buyer must submit entire order for Order Change Request using the last confirmed booked order version response.  Seller will be responsible for deciphering change request from buyer.  Cancellation of order either prior to start or mid flight will be submitted in an order change request<br/> Supported Transaction Types: New, Change, Cancel, Recall'
      operationId: BuyerOrders
      requestBody:
        description: Buyer Order
        required: true
        content:
          application/json:
            schema:
              description: |
                The Buyer can perform the following operations:
                <li>New or Change - Use the Buyer orders object
                <li>Cancel or Recall - Use the Generic object to Cancel or Recall
              oneOf:
                - $ref: '#/components/schemas/BuyerOrders'
                - $ref: '#/components/schemas/CancelConfirmRecallReject'
      responses:
        '202':
          $ref: '#/components/responses/Accepted'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        default:
          $ref: '#/components/responses/Unexpected'
  /seller/orders:
    post:
      tags:
        - Seller
      summary: Seller Reject or Confirm an order
      description: Allows the seller to respond with a reject or confirm of an order
      operationId: SellerOrders
      requestBody:
        description: Seller order confirm or reject
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelConfirmRecallReject'
      responses:
        '202':
          $ref: '#/components/responses/Accepted'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        default:
          $ref: '#/components/responses/Unexpected'
  /buyer/commercialInstructions:
    post:
      tags:
        - Buyer
      summary: 'Buyer or Creative Agencies to provide New, Change, Cancel or Recall Commercial Instructions'
      description: 'Allows the creative agency or service provider of commercial instructions to send new or revised traffic instructions on how commercial copy should be applied to units (No request from Seller is required)<br/> Supported Transaction Types: New, Change, Cancel, Recall'
      operationId: BuyerCommercialInstructions
      requestBody:
        description: commercial instructions request body is required.
        required: true
        content:
          application/json:
            schema:
              description: |
                Users of this contruct have the option to either
                <li>Use the full Commercial Instructions object to deliver New, or change instructions
                <li>Use the alternate object to recall, or cancel a previously sent instructions.
              oneOf:
                - $ref: '#/components/schemas/BuyerCommercialInstructions'
                - $ref: '#/components/schemas/CancelConfirmRecallReject'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        default:
          $ref: '#/components/responses/Unexpected'
  /seller/commercialInstructions:
    post:
      tags:
        - Seller
      summary: Seller optionally confirms or reject Commercial Instructions
      description: 'Allows the seller to respond to a new commercial instructions or comercial instructions changes with a confirm or reject. Supported Transaction Types: Reject, Confirm'
      operationId: SellerCommercialInstructions
      requestBody:
        description: Request body is required to Confirm or reject Commercial Instructions
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelConfirmRecallReject'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        default:
          $ref: '#/components/responses/Unexpected'
  /buyer/logtimes/subscription:
    post:
      tags:
        - Buyer
      summary: Allows the Buyer to initiate a request to subscribe to receive the seller's log time information
      description: 'This endpoint is hosted at the seller end. Allows the Buyer to to initiate a Request Request to Seller to subscribe to seller''s information Supported Transaction Types: New, Change, '
      operationId: BuyerLogtimesSubscription
      requestBody:
        description: seller provides the Log Times report to the buyer's system
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - description: Schema allows the buyer to formulate a query for log times information that meet the listed conditions
                  properties:
                    transactionHeader:
                      $ref: '#/components/schemas/TransactionHeader'
                    name:
                      description: Buyer request reference name
                      type: string
                      example: Post log and reconciled logs only
                    referenceIds:
                      description: Array of ReferenceId objects containing the order id references; may also contain originating RFP and Proposal id and source references
                      type: array
                      items:
                        $ref: '#/components/schemas/ReferenceId'
                    mediaOutlets:
                      description: Array of mediaOutlet objects being requested
                      type: array
                      items:
                        $ref: '#/components/schemas/MediaOutlet'
                      minItems: 1
                    buyer:
                      type: array
                      items:
                        $ref: '#/components/schemas/Buyer'
                    advertiser:
                      type: array
                      items:
                        $ref: '#/components/schemas/Advertiser'
                    contacts:
                      description: Array of Contact objects
                      type: array
                      items:
                        $ref: '#/components/schemas/Contact'
                    inventoryTypes:
                      description: ArrayList of InventoryTypes being requested
                      type: array
                      items:
                        type: string
                    statuses:
                      description: Indicated the airing status being requested Aired  = 'as-aired' reconciliation for the spot is complete No Run = spot either did not run or didn't run as contracted when the broadcast log was played out Scheduled  = spot is placed on a pre log that has not yet been played out Finalized = spot is placed on a log that is in a 'final status' and ready to be played out and the spot is locked from edits Not Scheduled = spot has not yet been placed on a future broadcast log Preempted = spot has been removed from a future broadcast log; the buyer will be offered a makegood or issued a credit
                      type: array
                      items:
                        type: string
                        enum:
                          - Aired
                          - Scheduled
                          - No Run
                          - Finalized
                          - Not Scheduled
                          - Preempted
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    startDate:
                      oneOf:
                        - $ref: '#/components/schemas/DynamicDate'
                        - type: string
                          format: date
                    endDate:
                      oneOf:
                        - $ref: '#/components/schemas/DynamicDate'
                        - type: string
                          format: date
                  required:
                    - transactionHeader
                    - referenceIds
                - $ref: '#/components/schemas/CancelConfirmRecallReject'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        default:
          $ref: '#/components/responses/Unexpected'
  /seller/logtimes:
    post:
      tags:
        - Seller
      summary: Seller Creates Logtimes record in the buyer system
      description: 'Allows the seller to send to the buyer the log times information. No Request from buyer is Required.<br/> Supported Transaction Types: New, Change'
      operationId: SellerLogtimes
      requestBody:
        description: seller provides the Log Times report to the buyer's system
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerLogtimes'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        default:
          $ref: '#/components/responses/Unexpected'
  /seller/makegood/guidelines:
    post:
      tags:
        - Seller
      summary: Seller submits a request for buyer's makegood guidelines
      description: |
        Allows the seller submits a request for buyer's makegood guidelines<br/>
        Supported Transaction Types: New
      operationId: SellerMakegoodGuidelines
      requestBody:
        description: SellerMakegoodGuidelines
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerMakegoodGuidelines'
      responses:
        '202':
          $ref: '#/components/responses/Accepted'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        default:
          $ref: '#/components/responses/Unexpected'
  /buyer/makegood/guidelines:
    post:
      tags:
        - Buyer
      summary: Buyer responds back to seller with list of makegood guidelines
      description: |
        Buyer responds back to seller with list of makegood guidelines
        Supported Transaction Types: New, Change, Cancel
      operationId: BuyermakegoodGuidelines
      requestBody:
        description: Makegoods
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/BuyerMakegoodGuidelines'
                - $ref: '#/components/schemas/CancelConfirmRecallReject'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        default:
          $ref: '#/components/responses/Unexpected'
  /seller/makegood/offers:
    post:
      tags:
        - Seller
      summary: Receive Makegood Offer
      description: |
        Seller sends to Buyer one or many offer requests to support the following: Makegood to resolve unresolved Preemptions "ADU" to resolve make-up for audience shortfall Supported Transaction Types: New, Change, Cancel, Recall
      operationId: SellerMakegoodOffers
      requestBody:
        description: MakegoodOffers
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/SellerMakegoodOffers'
                - $ref: '#/components/schemas/CancelConfirmRecallReject'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/Unexpected'
  /buyer/makegood/offers:
    post:
      tags:
        - Buyer
      summary: Buyer confirms or rejects Makegood Offers received from the seller
      description: |
        Allows the buyer to respond to an makegood offer(s) with an acceptance confirmation; this will accept all makegood offers in the request.
        Supported Transaction Types: Reject, Confirm
      operationId: BuyerMakegoodOffers
      requestBody:
        description: Makegood offer accept or reject request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelConfirmRecallReject'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        default:
          $ref: '#/components/responses/Unexpected'
  /buyer/impressions/subscription:
    post:
      tags:
        - Buyer
      summary: Buyer subscribe to receive notifications everytime impression-level log data is ready to download from the seller
      description: "Using this endpoint the buyer expresses its desire to receive notifications every time a new impression data are uploaded \t\t\t\t      "
      operationId: BuyerImpressionsSubscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuyerImpressionsSubscribe'
      responses:
        '201':
          $ref: '#/components/responses/Accepted'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        default:
          $ref: '#/components/responses/Unexpected'
  /seller/impressions/notification:
    post:
      tags:
        - Seller
      summary: "Seller delivers impression-level log data to buyer system\t"
      description: "Supports a push model where the seller sends files to buyer system on an agreed schedule.  Supports a report limited to a single advertiser, brand, product and order. Supported Transaction Types: New\t\t\t\t"
      operationId: SellerImpressionNotification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerImpressions'
      responses:
        '200':
          $ref: '#/components/responses/Accepted'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        default:
          $ref: '#/components/responses/Unexpected'
  /seller/invoices:
    post:
      tags:
        - Seller
      summary: Seller submits an invoice to buyer
      description: 'Allows the seller to send to the buyer new invoice information (No Request from buyer is Required) Supported Transaction Types: New, Change, Cancel'
      operationId: SellerInvoices
      requestBody:
        description: Invoice body included in request
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/SellerInvoices'
                - $ref: '#/components/schemas/CancelConfirmRecallReject'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        default:
          $ref: '#/components/responses/Unexpected'
  /buyer/audiences/subscription:
    post:
      tags:
        - Buyer
      summary: Allows the buyer to ask the seller for Audience information
      description: "Allows the buyer or agency to ask the seller for audience information on periodic basis Supported Transaction Types: New, Change, Cancel\t\t\t"
      operationId: BuyerAudiences
      requestBody:
        description: The request represents a query request defining the parameters and content of the expected audience responses.
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/BuyerAudiencesSubscription'
                - $ref: '#/components/schemas/CancelConfirmRecallReject'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        default:
          $ref: '#/components/responses/Unexpected'
  /seller/audiences:
    post:
      tags:
        - Seller
      summary: Allows the seller to provide the buyer or agency with responses for Audience information
      description: "Allows the seller to respond to the buyer or agency request for audience information on periodic basis Supported Transaction Types: New\t\t\t"
      operationId: SellerAudiences
      requestBody:
        description: The request represents a query request defining the parameters and content of the expected audience responses.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerAudiences'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        default:
          $ref: '#/components/responses/Unexpected'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    TransactionHeader:
      description: General transaction header information
      properties:
        tipVersion:
          description: TIP version of the interface
          type: string
        transactionId:
          $ref: '#/components/schemas/TransactionId'
        originalTransactionId:
          $ref: '#/components/schemas/TransactionId'
        timeStamp:
          description: Date and time the transaction was created - date-time represent UTC of the server
          type: string
          format: date-time
      required:
        - tipVersion
        - transactionId
        - timeStamp
    TransactionId:
      description: Transaction identifier details
      properties:
        transactionId:
          description: Global unique identifier (GUID)
          type: string
          format: uuid
        transactionType:
          description: Indicates the transaction type
          type: string
          enum:
            - New
            - Change
            - Cancel
            - Reject
            - Recall
            - Confirm
        sourceId:
          description: Indicates the unique identifier of the source of information from an external system
          type: string
        sourceName:
          description: Indicates the name of the source of information from an external system
          type: string
      required:
        - transactionId
        - transactionType
        - sourceId
        - sourceName
    MediaOutlet:
      description: Linear broadcast television or non-linear sell-side service
      properties:
        mediaOutletIds:
          description: Array of identifier objects used to identify the mediaOutletId and its source system
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          minItems: 1
        mediaOutletName:
          description: 'Station, network name or entity associated to mediaOutletId'
          type: string
        mediaOutletType:
          description: 'Indicates the type of media; for example Local TV, Diginet TV, National Cable TV, Local Cable TV, Video Streaming Service, Satellite, Website, App, Audio Streaming Service, Radio Station, Unwired, Parent'
          type: string
          example: Local TV
        mediaOutletChannel:
          description: Station or network station identification (Channel)
          type: string
          example: KHOU-TV
        mediaOutletMarketName:
          description: Media market name such as the DMA or region
          type: string
          example: 'Houston, TX'
        mediaOutletReference:
          description: External mediaoutlet reference name
          type: string
      required:
        - mediaOutletIds
        - mediaOutletName
        - mediaOutletType
    Advertiser:
      description: Advertiser information
      properties:
        advertiserIds:
          description: Array of identifier objects used to identify the advertiser id and its source system
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          minItems: 1
        advertiserName:
          description: Advertiser name
          type: string
          example: Hyundai
        advertiserReference:
          description: External advertiser reference to support data mapping differences between systems
          type: string
      required:
        - advertiserIds
        - advertiserName
    Brand:
      description: Advertising brand information
      properties:
        brandIds:
          description: Array of identifier objects used to identify the brand id and its source system
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          minItems: 1
        brandName:
          description: Brand Name
          type: string
          example: Kona
        brandReference:
          description: External brand reference name
          type: string
      required:
        - brandIds
        - brandName
    Buyer:
      description: Buy-side organization information
      properties:
        buyerIds:
          description: Array of identifier objects used to identify the buyer id and it source system
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          minItems: 1
        buyerName:
          description: Buying organization name
          type: string
          example: Canvas Worldwide. LLC
        buyerReference:
          description: External buyer reference Name
          type: string
      required:
        - buyerIds
        - buyerName
    Product:
      description: Product category information
      properties:
        productIds:
          description: Array of identifier objects used to identify the product id and its source system
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          minItems: 1
        productName:
          description: Product name
          type: string
          example: Automobile
        productReference:
          description: External product reference name
          type: string
      required:
        - productIds
        - productName
    AudienceTarget:
      description: Audience target information
      properties:
        excludeOrInclude:
          description: Include or Exclude
          type: string
          enum:
            - Include
            - Exclude
        audienceTargetIds:
          description: Array of identifier objects used to identify the audience target id and its source system
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        targetAttribute:
          description: 'Target attributes demographics could range from household income or education, purchase propensity (e.g. past purchases or predicted future purchases), lifestyle (a sophisticated combination of geography and demographics, e.g. affluent suburbanites, media behaviors (e.g. sports fans), geography, or expressed interests (e.g. music or cooking), etc.'
          type: string
          example: HH Income
        value:
          description: ArrayList  containing the targetAttributes values
          type: array
          items:
            type: string
            example:
              - '$50,000 - $75,000'
              - '$75,000, -$100,000'
      required:
        - excludeOrInclude
        - targetAttribute
        - value
    AudienceSegment:
      description: Audience segment information
      properties:
        audienceSegmentIds:
          description: Array of identifier objects to identify an audience segment id and its system source
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          minItems: 1
        audienceSegmentName:
          description: Audience segment name
          type: string
          example: P18-49
        audienceSegmentReference:
          description: External audience segment reference
          type: string
        audienceMethodology:
          description: Methodology used to aggregate the audiences that are being provided in the audienceMetricValue
          type: string
          example: Daypart Average
        isPrimary:
          description: True/False
          type: boolean
        isGuarantee:
          description: True/False
          type: boolean
        ratingSource:
          description: Indicates the source for the audience data; extended enum values allowed
          type: string
          enum:
            - Nielsen
            - ComScore
            - First-Party
            - Distributor
            - Licensed
        ratingStream:
          description: Indicates the rating stream associated to the rating source; extended eum values allowed
          type: string
          enum:
            - Program Live
            - Commercial Ratings Live
            - Commercial Rating Live+3
            - Commercial Rating Live+7
      required:
        - audienceSegmentIds
        - audienceSegmentName
    AudienceSegmentDetail:
      description: Combines a mediaoutlet id with audience segment and universe objects
      properties:
        mediaOutletIds:
          description: Array of identifier objects used to identify the mediaoutletid and its system source associated to the audienceSegment
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          minItems: 1
        audienceSegment:
          $ref: '#/components/schemas/AudienceSegment'
        universes:
          description: Array of universe objects  used to identify the universes available for the mediaoutlet
          type: array
          items:
            $ref: '#/components/schemas/Universe'
          minItems: 1
      required:
        - mediaOutletIds
        - audienceSegment
    AudienceMetric:
      description: Audience metric type and value information
      properties:
        audienceMetric:
          description: Indicates the audience metric; extended enum values allowed
          type: string
          enum:
            - Impressions
            - Rating
            - GRPs
            - VPVH
            - Composition
        audienceMetricValue:
          description: audienceMetric type value
          type: integer
          example: 43256
      required:
        - audienceMetric
        - audienceMetricValue
    PricingMetricOption:
      description: 'Pricing metric Cost-per-thousand, Cost-per-point, Cost-per-engagement, Cost-per-action'
      type: string
      enum:
        - CPM
        - CPP
        - CPE
        - CPA
        - SPOT
    PricingMetric:
      description: Audience-based pricing metric type and value
      properties:
        PricingMetricOption:
          $ref: '#/components/schemas/PricingMetricOption'
        grossValue:
          description: Gross value amount
          type: number
          format: float
        netValue:
          description: Gross value amount minus any fixed advertising agency commission or compensation
          type: number
          format: float
      required:
        - PricingMetricOption
        - grossValue
    AudiencePricingMetric:
      description: Audience segment id with audience metric and pricing metric objects
      properties:
        audienceSegmentIds:
          description: Array of identifier objects used to identify the audienceSegmentId and its system source
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          minItems: 1
        type:
          description: 'Indicates the type for the audience and pricing metrics.  Selling = booked audience values from Order, Actual =the delivered/actual values from a data measurement service, Projection = the projected audience values'
          type: string
          enum:
            - Selling
            - Actual
            - Projection
        audienceMetric:
          $ref: '#/components/schemas/AudienceMetric'
        pricingMetric:
          $ref: '#/components/schemas/PricingMetric'
      required:
        - audienceSegmentIds
        - pricingMetric
    FrequencyCapping:
      description: Frequency capping information
      properties:
        period:
          description: Indicates the period of a time to be used for the frequency capping; extended enum values accepted
          type: string
          enum:
            - Minute
            - Day
            - Week
            - Month
            - Hour
            - Site Session
            - Order
            - Asset
        perPeriod:
          description: Value defined for the period; the default is 1 per period type
          type: integer
        value:
          description: FrequencyCapping value for the time period
          type: integer
      required:
        - period
        - value
    PacingRule:
      description: Pacing delivery options information
      properties:
        type:
          description: Indicates the pacing delivery rule type; extended enum values allowed
          type: string
          enum:
            - Frontload
            - Even
            - Daily Fast ASAP
            - Daily Even
            - Flight ASAP
            - Flight Even
            - Flight Ahead
        rateType:
          description: Indicates the rate type for the values
          type: string
          enum:
            - Absolute
            - Percent
      required:
        - type
    Universe:
      description: Universe coverage and the estimated number of households or people within the universe
      properties:
        universeType:
          description: Indicates the universe type used  for the estimated number of household or people
          type: string
          enum:
            - Market
            - Total US
            - Coverage
            - Addressable
        universeTypeValue:
          description: UniverseType value
          type: integer
    CancellationTerm:
      description: Cancellation terms
      properties:
        cancellationType:
          description: Indicates the type of CancellationTerm
          type: string
          enum:
            - Quarterly
            - Broadcast Date
        cancellation:
          description: Quarter name or broadcast date dependent on cancellation type
          oneOf:
            - type: string
            - type: string
              format: date
        cancellationPriorDays:
          description: Number of days notice needed prior to start quarter or broadcast date to request cancellation
          type: integer
          example: 14
        cancellationPercentage:
          description: Percentage of total amount that is cancellable
          type: number
          format: float
          example: 25
    TimeSeparation:
      description: Time separation terms
      properties:
        unitLength:
          description: Unit length
          type: integer
          example: 30
        timeSeparation:
          description: Agreement whereby the seller agrees to separate advertiser’s commercials by a specific length of time in addition to agreeing to not run another product that is directly competitive within a specific time frame; agreement may defined by unit length or across all lengths. Time Separation is defined in seconds
          type: integer
          example: 900
    ReferenceId:
      description: 'Reference details for RFP, Proposal, Order and Invoice'
      properties:
        referenceSourceName:
          description: Name associated with the organization that is supplying the ids and version information
          type: string
          example: KHOU-TV
        referenceSourceId:
          description: ID associated with the organization sending the information
          type: string
        referenceSourceLookup:
          description: Reference source look up such as a URI to lookup information about the reference source name
          type: string
        referenceType:
          description: Indicates the type of data that is being provided
          type: string
          enum:
            - RFP
            - Proposal
            - Deal
            - Order
            - Invoice
        referenceId:
          description: Indicates the number or string ID associated with the reference type
          oneOf:
            - type: integer
            - type: string
        referenceVersionId:
          description: Version number associated with the reference id; this is used to track to track changes
          type: string
          example: 1
        referenceName:
          description: 'Free form name used to further identify the type of entity such as the name associated to the RFP, Order, Proposal, or other types of references'
          type: string
          example: Hyundai 1Q22
      required:
        - referenceSourceName
        - referenceSourceId
        - referenceType
        - referenceId
    Currency:
      description: Currency Code is based on ISO 4217. This is the short list of most widely used codes for North America
      type: string
      enum:
        - USD
        - CAD
        - EUR
        - GBP
        - MXN
        - AUD
      default: USD
    CpeCode:
      description: 'Packages the buyer''s client code, product code and estimate codes'
      properties:
        clientCode:
          description: Client code provided from the buyer
          type: string
        productCode:
          description: Product code provided from the buyer
          type: string
        estimateCode:
          description: Estimate code provided from the buyer
          type: string
    BillingOption:
      description: Billing and invoice information
      properties:
        billingCalendar:
          description: Indicates the invoicing billing calendar
          type: string
          enum:
            - Broadcast
            - Calendar
            - Nielsen
        billingCycle:
          description: Indicates the interval within the billing calendar
          type: string
          enum:
            - Month
            - Week
        billingGranularity:
          description: Indicates the order split parameters used in the invoice generation
          type: string
          enum:
            - Order
            - Brand
            - Inventory Type
            - Insertion Order
      required:
        - billingCalendar
        - billingCycle
    RateCard:
      description: Ratecard information
      properties:
        rateCardId:
          description: Seller's ratecard identifier
          type: string
          example: 1
        rateCardName:
          description: Ratecard name
          type: string
          example: 1Q'22 Rate Card
        currency:
          $ref: '#/components/schemas/Currency'
      required:
        - rateCardName
    Budget:
      description: 'Budget or total allocation with optional allocations per market, media outlet or media type'
      properties:
        budgetAmount:
          description: Gross budget amount
          type: number
          format: float
          minimum: 0
          exclusiveMinimum: true
        budgetAllocation:
          $ref: '#/components/schemas/BudgetAllocation'
      required:
        - budgetAmount
    BudgetAllocation:
      description: Budget number and/or percentage in terms of budget type
      properties:
        budgetType:
          description: Indicates the type of budget
          type: string
          enum:
            - DMA
            - MediaOutlet
            - MediaType
        budgetName:
          description: 'Specified DMA from the selected list when budget type is equal to DMA or a string containing a channel or specific type of media. The value of budget name is a conditional on budgetType. - If budgetType is DMA, use the canonical list of DMA names - If budgetType is Mediaoutlet, use media outlet name (call sign) - If budgetType is MediaType, use values from MediaOutletType Enum'
          type: string
        budgetAmount:
          description: Gross budget amount for the budget allocation
          type: number
          format: float
          minimum: 0
          exclusiveMinimum: true
        budgetSharePercent:
          description: Percentage or share of budget for the budget allocation
          type: number
          format: float
          minimum: 0
          exclusiveMinimum: true
      required:
        - budgetType
        - budgetName
    Guideline:
      description: General guidelines or rules
      properties:
        guidelineType:
          description: Indicates the type of guideline; extended enum values are allowed
          type: string
          enum:
            - Content
            - Program
            - MPAA
            - Rating
            - Site Category
            - Genre
            - Media Outlet Type
        excludeOrInclude:
          type: string
          enum:
            - Include
            - Exclude
        guidelines:
          description: List of Guideline values associated to the guideline type
          type: array
          items:
            type: string
      required:
        - guidelineType
        - excludeOrInclude
    DateTime:
      description: Broadcast date and broadcast time used in Logtimes & Invoices
      properties:
        broadcastDate:
          description: Broadcast date on which the unit aired/scheduled; this is not a calendar date
          type: string
          format: date
        calendarDateTime:
          description: Calendar date and time on which the unit aired/scheduled. Time is interpreted based on the local timezone of the mediaoutlet using military date time YYYY-MM-DDTHH;MM;SS
          type: string
          format: date-time
    TimePeriod:
      description: 'Combines date window, DOW and time window objects'
      properties:
        dateWindow:
          $ref: '#/components/schemas/DateWindow'
        DOW:
          $ref: '#/components/schemas/DayOfWeek'
        timeWindow:
          $ref: '#/components/schemas/TimeWindow'
      required:
        - dateWindow
        - DOW
    DateWindow:
      description: Start and end dates
      properties:
        startDate:
          description: Start date
          type: string
          format: date
        endDate:
          description: End date
          type: string
          format: date
      required:
        - startDate
    TimeWindow:
      description: Start and end times
      properties:
        startTime:
          description: 'Start time, indicates the starting time for the period. Time is considered local to the mediaoutlet. Using military time HH;MM;SS'
          type: string
          pattern: '^(([0-1][0-9])|(2[0-3]))(:[0-5][0-9]){2}$'
        endTime:
          description: 'End time, indicates the ending time for the period. Time is interpreted based on the local timezone of the mediaoutlet. Using military time HH;MM;SS'
          type: string
          pattern: '^(([0-1][0-9])|(2[0-3]))(:[0-5][0-9]){2}$'
      required:
        - startTime
    DayOfWeek:
      description: Valid days of week
      properties:
        isMonday:
          description: True/False
          type: boolean
        isTuesday:
          description: True/False
          type: boolean
        isWednesday:
          description: True/False
          type: boolean
        isThursday:
          description: True/False
          type: boolean
        isFriday:
          description: True/False
          type: boolean
        isSaturday:
          description: True/False
          type: boolean
        isSunday:
          description: True/False
          type: boolean
      required:
        - isMonday
        - isTuesday
        - isWednesday
        - isThursday
        - isFriday
        - isSaturday
        - isSunday
    DailyUnitDistribution:
      description: Number of units per day of week. Zero (0) indicates no unit will be expected to air on the corresponding day of the week
      properties:
        pacingRule:
          $ref: '#/components/schemas/PacingRule'
        monday:
          description: 'Number of units either in impressions, linear spots or the value zero'
          type: integer
          minimum: 0
        tuesday:
          description: 'Number of units either in impressions, linear spots or the value zero'
          type: integer
          minimum: 0
        wednesday:
          description: 'Number of units either in impressions, linear spots or the value zero'
          type: integer
          minimum: 0
        thursday:
          description: 'Number of units either in impressions, linear spots or the value zero'
          type: integer
          minimum: 0
        friday:
          description: 'Number of units either in impressions, linear spots or the value zero'
          type: integer
          minimum: 0
        saturday:
          description: 'Number of units either in impressions, linear spots or the value zero'
          type: integer
          minimum: 0
        sunday:
          description: 'Number of units either in impressions, linear spots or the value zero'
          type: integer
          minimum: 0
    InventoryPosition:
      description: Indicates a request for placement or an actual placement of a commercial unit within a break or program
      type: string
      enum:
        - First
        - Middle
        - Last
        - Pre-Roll
        - Mid-Roll
        - Post-Roll
    LinkType:
      description: Linking of matching or related commercials
      properties:
        linkType:
          description: Indicates the link constraint between two or more units (spots)
          type: string
          enum:
            - Billboard
            - Piggyback
            - Bookend
            - Sandwich
            - Donut
            - Sponsorship
            - Package
        linkNum:
          description: Unique number to communicate the association of two or more units within a link type
          type: integer
        linkSeq:
          description: 'Airing sequential order for the units linked together such as A or B, etc.'
          type: integer
      required:
        - linkType
    Contact:
      description: Contact information
      properties:
        contactType:
          description: Indicates the type of Contact
          type: string
          enum:
            - Account Executive
            - Planner
            - Assistant
            - Buyer
            - Payee
            - Creative
            - Delivery Service
        referenceSourceName:
          description: Name associated with the organization that is supplying the contact information
          type: string
        referenceSourceId:
          description: ID associated with the organization
          type: string
        salesOffices:
          description: ArrayList of offices associated to the contact
          type: array
          items:
            type: string
            uniqueItems: true
            nullable: true
            example:
              - 'Dallas, TX'
              - 'NYC, NY'
        contactFirstName:
          description: Contact First Name
          type: string
        contactLastName:
          description: Contact Last Name
          type: string
        addressLine1:
          description: Contact Address Line 1
          type: string
        addressLine2:
          description: Contact Address Line 2
          type: string
          nullable: true
        city:
          description: City
          type: string
          nullable: true
        state:
          description: State
          type: string
          nullable: true
        postalCode:
          description: Postal Code
          type: string
          nullable: true
        country:
          description: Country
          type: string
          nullable: true
        phoneNumber:
          description: Primary telephone number
          type: string
          nullable: true
        email:
          description: Primary email
          type: string
          format: email
          nullable: true
        effectiveDate:
          description: Effective date for contact
          type: string
          format: date
      required:
        - contactType
        - referenceSourceName
        - referenceSourceId
        - contactFirstName
        - contactLastName
        - effectiveDate
    RemittanceInfo:
      description: Invoice remittance Information and billing instructions
      properties:
        referenceSourceId:
          description: ID associated with the remittance
          type: string
        referenceName:
          description: Name associated with the remittance
          type: string
        contactFirstName:
          description: Contact First Name (not necessary)
          type: string
        contactLastName:
          description: Contact Last Name ( not necessary)
          type: string
        addressLine1:
          description: Contact Address Line 1
          type: string
        addressLine2:
          description: Contact Address Line 2
          type: string
          nullable: true
        city:
          description: City
          type: string
          nullable: true
        state:
          description: State
          type: string
          nullable: true
        postalCode:
          description: Postal Code
          type: string
          nullable: true
        country:
          description: Country
          type: string
          nullable: true
        phoneNumber:
          description: Primary telephone number
          type: string
          nullable: true
        contactEmail:
          description: Primary email for payment remittance information
          type: string
          format: email
          nullable: true
        portalInformation:
          description: Portal information including payment instructions
          type: string
          nullable: true
        paymentLink:
          description: URL that directs buyer to invoice payment options
          type: string
          nullable: true
        comments:
          description: Comments
          type: string
          nullable: true
    SalesElementHeader:
      description: Sales element header information
      properties:
        mediaOutletId:
          description: mediaOutletId associated with the SalesElement
          type: string
        salesElementName:
          description: 'SalesElement name; this may be a program, daypart name or another type of sales element'
          type: string
          example: Primetime
        salesElementId:
          description: SaleElement identifier
          type: string
        salesElementType:
          description: Indicates the type of SalesElement
          type: string
          enum:
            - Time-specific
            - Program
            - Audience
            - Package
      required:
        - mediaOutletId
        - salesElementName
        - salesElementId
        - salesElementType
    SalesElement:
      description: 'Combines the sales element header, time periods, programs and sales element inventory objects'
      properties:
        salesElementHeader:
          $ref: '#/components/schemas/SalesElementHeader'
        timePeriods:
          description: Array of TimePeriod objects indicating SalesElement availability
          type: array
          items:
            $ref: '#/components/schemas/TimePeriod'
        devices:
          description: Optional array of devices valid for the sales element; extended enum values are allowed
          type: array
          items:
            type: string
            enum:
              - PlayStation
              - Amazon Fire
              - Roku
              - Chromecast
              - Smartphones
              - Smart TV
        programs:
          description: ArrayList of program names valid for the salesElement
          type: array
          items:
            type: string
        salesElementInventorys:
          description: Array of SalesElementInventory objects
          type: array
          items:
            $ref: '#/components/schemas/SalesElementInventory'
      required:
        - salesElementHeader
    SalesElementInventory:
      description: Combines the sales element inventory and sales element inventory dates objects
      properties:
        inventoryType:
          description: 'Type of advertising such as a commercial, billboard or other type of advertisement'
          type: string
          example: Commercial
        linkType:
          $ref: '#/components/schemas/LinkType'
        companionTypeIds:
          description: ArrayList of companionTypeIds that will accompany the inventory type e.g. a stream ad or bumper ad
          type: array
          items:
            type: string
        inventoryPosition:
          description: Indicates a specific break or position within a sales element
          $ref: '#/components/schemas/InventoryPosition'
        inventoryLength:
          description: Length for the ad unit or inventoryType in seconds
          type: integer
          example: 30
        salesElementInventoryDates:
          description: Array of SalesElementInventoryDate objects
          type: array
          items:
            $ref: '#/components/schemas/SalesElementInventoryDate'
          minItems: 1
      required:
        - inventoryType
    SalesElementInventoryDate:
      description: Combines sales element inventory dates with audience pricing metrics objects
      properties:
        dateType:
          description: Indicates the granularity type for the date window
          type: string
          enum:
            - Day
            - Week
            - Month
            - Quarter
        calendarType:
          description: Indicates the calendar for the date type and date window
          type: string
          enum:
            - Broadcast
            - Calendar
        dateWindow:
          $ref: '#/components/schemas/DateWindow'
        inventoryCapacity:
          description: Maximum capacity defined either in linear spots or the in the number of  impressions
          type: number
          format: float
        inventoryAvails:
          description: Number of units remaining either in linear spots or impressions
          type: number
          format: float
        inventoryMax:
          description: Maximum number of units remaining from the inventoryAvails in either in linear spots or impressions
          type: number
          format: float
        audiencesPricingMetrics:
          type: array
          items:
            $ref: '#/components/schemas/AudiencePricingMetric'
      required:
        - dateWindow
    SalesElementTransaction:
      description: 'Combines the sales element header, time periods, programs and transaction inventory'
      properties:
        salesElementHeader:
          $ref: '#/components/schemas/SalesElementHeader'
        timePeriods:
          description: Array of TimePeriod objects indicating SalesElement day and time period constraints
          type: array
          items:
            $ref: '#/components/schemas/TimePeriod'
        devices:
          description: Optional array of devices valid for the sales element; extended enum values are allowed
          type: array
          items:
            type: string
            enum:
              - PlayStation
              - Amazon Fire
              - Roku
              - Chromecast
              - Smartphones
              - Smart TV
        programs:
          description: ArrayList of program names valid for the salesElement
          type: array
          items:
            type: string
        salesElementTransactionInventorys:
          type: array
          items:
            $ref: '#/components/schemas/SalesElementTransactionInventory'
      required:
        - salesElementHeader
        - timePeriods
        - salesElementTransactionInventorys
    SalesElementTransactionInventory:
      description: Combines sales element transaction inventory with the transaction dates
      properties:
        lineNum:
          description: Supplier's generated line number/id
          type: string
        lineReference:
          description: Additional reference for the supplier's line number such as line num from an external system source
          type: string
          nullable: true
        lineReferences:
          description: Array of identifier objects to identify a line id and system source; note- once the identifier object has been adopted the goal is to remove existing lineNum and lineReference
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        inventoryType:
          description: 'Type of advertising such as a commercial, billboard or other forms of advertisement'
          type: string
        companionTypeIds:
          description: ArrayList of companionTypeIds that will accompany the inventory type e.g. a stream ad or bumper ad
          type: array
          items:
            type: string
        linkType:
          $ref: '#/components/schemas/LinkType'
        inventoryPosition:
          $ref: '#/components/schemas/InventoryPosition'
        inventoryLength:
          description: Length of the advertisement/inventory type in seconds
          type: integer
          nullable: true
        isAdu:
          description: Audience Deficiency Unit are units of commercial advertising inventory made available to advertisers as fulfillment for the inventory the advertisers purchased that ran in programs that under-delivered on contracted audience demographic ratings
          type: boolean
          nullable: true
        isBonus:
          description: Free ($0) ad impressions that a publisher includes with paid media
          type: boolean
          nullable: true
        externalComment:
          description: Free form comments string that can be used in any of the many interfaces the Sales Element objects appears. For example to support buyer or seller generic comments to guide or explain changes that may have been applied to the line.
          type: string
          nullable: true
        salesElementTransactionDates:
          description: Array of SalesElementTransactionDates
          type: array
          items:
            $ref: '#/components/schemas/SalesElementTransactionDate'
          minItems: 1
      required:
        - lineNum
        - inventoryType
        - salesElementTransactionDates
    SalesElementTransactionDate:
      description: Combines sales element transaction date information with the audience pricing metrics
      properties:
        dateType:
          description: Indicates the granularity type for the date window
          type: string
          enum:
            - Day
            - Week
            - Month
            - Quarter
        calendarType:
          description: Indicates the calendar for the date type and date window
          type: string
          enum:
            - Broadcast
            - Calendar
        dateWindow:
          $ref: '#/components/schemas/DateWindow'
        unitCount:
          description: Number of units either in linear television spots or audience impressions
          type: integer
          minimum: 0
        dailyUnitDistribution:
          $ref: '#/components/schemas/DailyUnitDistribution'
        frequencyCappings:
          description: Array of FrequencyCapping objects
          type: array
          items:
            $ref: '#/components/schemas/FrequencyCapping'
        pricingMetric:
          $ref: '#/components/schemas/PricingMetric'
        grossCost:
          description: Gross value amount for the unit count across the date window
          type: number
          format: float
          example: 150
        netCost:
          description: Gross value amount minus any fixed advertising agency commission or compensation
          type: number
          format: float
          example: 127.5
        audienceTargets:
          description: Array of AudienceTarget objects
          type: array
          items:
            $ref: '#/components/schemas/AudienceTarget'
        audiencesPricingMetrics:
          description: Array of audiencePricingMetrics
          type: array
          items:
            $ref: '#/components/schemas/AudiencePricingMetric'
          nullable: true
        externalComment:
          description: 'Free form comments string that can be used in any of the many interfaces the Sales Element objects appears. For example it can be used to support buyer or seller generic comments to guide the line-level negotiations in the proposal. It could include comments about the audience, rate, date, and units.'
          type: string
          nullable: true
      required:
        - dateWindow
    Frequency:
      description: Indicates the recurrence pattern at which an associated TIP request will be auto generated
      properties:
        effectiveOn:
          description: 'When true, indicates that the report subscription will stay active until it is terminated by the requester Cancel Request. When false, indicates that the report will terminate either on the date indicated by the endOn or the number of after the number of occurences indicated in endOccurAfter'
          type: string
          format: date
          example: 2020-08-12T00:00:00.000Z
        every:
          description: Indicates the unit of time in which to receive the information available in the subscription
          type: string
          enum:
            - When Available
            - Hour
            - Day
            - Week
            - Month
        onDay:
          description: Valid when every is equal to week; unique list the days of the week on which the data (report) is expected to be generated
          type: array
          items:
            type: string
            enum:
              - Mon
              - Tue
              - Wed
              - Thu
              - Fri
              - Sat
              - Sun
        onDate:
          description: 'Valid when every is equal to Month; unique day(s) of the month on which the data ( report) is expected to be generated; the values in onDate must be restricted to 1, 2, 3, 4, 5 to indicate 1st, 2nd, ... of the month.'
          type: array
          items:
            type: integer
            example:
              - 1
              - 15
        isEndNever:
          description: Indicates if the report subscription will stay active until it is terminated by the requester Cancel Request
          type: boolean
          default: true
        endOn:
          description: Indicate if the subscription must end at a specific date. if specified it takes precedence over isEndNever. if endOccurAfter is specified report would stop after either date is reached or number of occurrences whichever comes first
          type: string
          format: date
          nullable: true
          default: null
        endOccurAfter:
          description: Indicates if the report subscription must end after the specified number of times. When specified it takes precedence over isEndNever. if endOn is specified report  would stop after either date is reached or number of occurrences whichever comes first
          type: integer
          minimum: 0
          nullable: true
    DynamicDate:
      description: 'Indicates the values to be used when calculating a start date, or end date relative to the report date.'
      properties:
        offsetType:
          description: Provides the unit for the offset value
          type: string
          enum:
            - Hour
            - Day
            - Week
            - Month
            - Quarter
            - Year
        offset:
          description: 'negative offset mean number of offsetypes prior to reporting day, positive number mean number of offsettypes following the reporting day.  0 indicates the reporting day'
          type: integer
          example: -7
      required:
        - offsetType
        - offset
    ItemDetail:
      description: 'Indicates the values to be used in invoice tax, discount or other type of user-defined invoice item'
      properties:
        itemType:
          description: 'Indicates the type of Tax type, Discount, or any other type presented in the associated value'
          type: string
          nullable: false
          example: Sales Tax
        value:
          description: Indicates the value associated to the type of the item type.
          type: number
          format: float
          example: 1245.55
      required:
        - itemType
        - value
    CancelConfirmRecallReject:
      description: 'Recall, Cancel, Confirm or Reject for any transaction'
      properties:
        transactionHeader:
          $ref: '#/components/schemas/TransactionHeader'
        referenceIds:
          type: array
          items:
            $ref: '#/components/schemas/ReferenceId'
          minItems: 1
        comments:
          description: Free form comments
          type: string
      required:
        - transactionHeader
        - referenceIds
    Error:
      description: Defines errors returned from all APIs
      properties:
        errorCode:
          type: integer
          example: 400
        errorMessage:
          type: string
          example: Bad Request
        errorList:
          type: object
          additionalProperties:
            type: string
            example:
              startDate: Invalid DateFormat
              netCost: Value Can Not be Negative
      required:
        - errorCode
        - errorMessage
    AcceptedResponse:
      description: Defines successful return from all APIs
      properties:
        transactionId:
          type: string
          format: uuid
        timeStamp:
          type: string
          format: date-time
      required:
        - transactionId
        - timeStamp
    Creative:
      description: Object representing the creative
      properties:
        ids:
          description: 'UniqueID from the seller of the Creative [who assigns this in the process]'
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        name:
          description: Name of the creative
          type: string
          nullable: true
        status:
          type: string
          enum:
            - Not Final
            - Final
            - On-Hand
        length:
          description: Length (in seconds) of the Creative excluding slate
          type: integer
      required:
        - ids
    Format:
      description: Formatting for creative asset
      properties:
        container:
          description: 'Container format that contains the video, audio, etc.'
          type: string
        video:
          description: Video codes
          type: string
        audio:
          description: List of audio codes
          type: array
          items:
            type: string
            example:
              - ENG-US
              - ENG-UK
        aspect:
          description: Aspect ratio
          type: string
          example: 979
        resolution:
          description: Screen resolution
          type: string
        screen:
          description: Screen format
          type: string
        bitRate:
          description: Delivery bitrate in kbps
          type: integer
        duration:
          description: duration in seconds
          type: integer
          example: 30
      required:
        - container
        - video
        - audio
        - duration
    Identifier:
      description: Identifies ids and system source association
      properties:
        id:
          description: Identifier from the buyer or seller that indicates the id assignment
          type: string
        version:
          description: Identifier from the buyer or seller that indicates the id assignment  version
          type: string
        srcId:
          description: Optional identifier indicating the id of the system source providing the the id
          type: string
        srcName:
          description: Name of the system source that is providing the id
          type: string
      required:
        - id
        - srcName
    SupplyPath:
      description: Impression supply path
      properties:
        id:
          description: 'Identifier from Seller to indicate the means that the ad was delivered (SSP, PMP, direct publisher integration)'
          type: string
        extId:
          description: External identifier from platform to indicate the supply source
          type: string
        batchEntry:
          description: 'String from source (json, xml, etc. to indicate a batch supply entry)'
          type: string
      required:
        - id
    Device:
      description: Viewer's device information
      properties:
        ip:
          description: 'IP address (source IP V4, or V6)'
          $ref: '#/components/schemas/IpAddress'
        ifa:
          description: Identifier of the device that is displaying the ad
          type: string
        sspId:
          description: Identifier of the sell-side platform that enabled the inventory
          type: string
        ua:
          description: User Agent of the device that is displaying the ad
          type: string
        catSRC:
          description: 'Type of source of the inventory (SSP, PMP)'
          type: string
        catType:
          description: 'Type of device, as defined by RTB 2.3.1 section 5.17'
          type: string
          enum:
            - Mobile/Tablet
            - Personal Computer
            - Connected TV
            - Phone
            - Tablet
            - Connected Device
            - Set Top Box
      required:
        - ip
    Geo:
      description: Viewer's location
      properties:
        src:
          description: 'Type of source providing the geographic data (ex. IP2Location, Neustar (Quova), MaxMind)'
          type: string
        country:
          description: 'Country where ad is served, Country code using ISO-3166-1-alpha-3.'
          type: string
        region:
          description: Region code using ISO-3166-2; 2-letter state code if USA
          type: string
        dma:
          description: U.S. DMA where ad is served
          type: string
        postal:
          description: Postal code where ad is served
          type: string
        lat:
          description: Latitude where ad is served
          type: number
          format: float
          minimum: -90
          maximum: 90
        long:
          description: Longitude where ad is served
          type: number
          format: float
          minimum: -180
          maximum: 180
        timeZone:
          description: Timezone of location where ad is served
          type: string
        accuracy:
          description: Accuracy estimate of location (applies to lat/long data)
          type: integer
      required:
        - country
    Event:
      description: Events captured for a given Impression
      properties:
        type:
          description: ImpressionID + eventType will be unique. (Please see VAST spec for all event Types)
          type: string
        timestamp:
          description: Timestamp for the event
          type: string
          format: date-time
        isSigVerified:
          description: Indicates if the event has a verified signature from inventory source
          type: boolean
        ip:
          description: IP address of the event
          $ref: '#/components/schemas/IpAddress'
        ua:
          description: User Agent of device where event occurred
          type: string
        refUrl:
          description: URL of site where event occurred
          type: string
        errCode:
          description: Error code of event in case of failure
          type: string
        rawUrl:
          description: Pixel URL for event
          type: string
      required:
        - type
        - timestamp
        - isSigVerified
    Crypto:
      description: Cryptographically sign an impression
      properties:
        signatureId:
          description: Base64 encoded ID of the signature
          type: string
          format: byte
          example: SVBWNE9SSVBWNkFkZHJlc3M=
      required:
        - signatureId
    IpAddress:
      description: Type Definition to accept IPv4 or IPV6
      type: string
      example: 192.168.001.001
      pattern: '^([0-9]{1,3}[.]){3}([0-9]{1,3})|([0-9a-fA-F]{4}[:]){7}[0-9a-fA-F]{4}$'
    Impression:
      description: One impression with all associated Ids
      properties:
        id:
          description: Seller generated unique number for Impression Event
          type: string
          format: uuid
        statSource:
          description: Identifies the originating impressions tracking source if impressions have multiple tracking sources. The combination of StatSource and MediaOutlet identifies a unique impression.
          type: string
        timestamp:
          description: UTC source
          type: string
          format: date-time
        referenceId:
          description: Campaign/Lineitem that the impression is associated with. Ideally it would just be id+version to associate back to a broader metadata object
          $ref: '#/components/schemas/Identifier'
        creative:
          description: Creative that the impression is associated with. Ideally it would just be id+version to associate back to a broader metadata object
          $ref: '#/components/schemas/Creative'
        salesElementId:
          description: SalesElement Id from the list on line
          $ref: '#/components/schemas/Identifier'
        contentOwnerId:
          description: contentOwnerId is one of the mediaOutlet serving the content listed in the array of mediaOutlets in the message
          $ref: '#/components/schemas/Identifier'
        supplyPath:
          description: Documentation of the supply chain leading to the impression
          $ref: '#/components/schemas/SupplyPath'
        device:
          description: User's device descriptor
          $ref: '#/components/schemas/Device'
        geo:
          description: User's location
          $ref: '#/components/schemas/Geo'
        events:
          description: 'Events (Start, Q1, Q2, ....)'
          type: array
          items:
            $ref: '#/components/schemas/Event'
          minItems: 1
        publisherBundle:
          description: RTB compliant site name that indicates the individual app and publisher for the content
          type: string
        publisherSspId:
          description: Identifier for the supply-side platform that enabled the inventory
          type: string
        adLedger:
          description: Fields needed to cryptographically validate this impression
          $ref: '#/components/schemas/Crypto'
      required:
        - id
        - timestamp
        - referenceId
        - creative
        - salesElementId
        - contentOwnerId
        - device
        - geo
        - events
    BuyerInventoryAvailsSubscription:
      description: Schema allows the buyer to formulate a query for Inventory meeting the listed conditions
      properties:
        transactionHeader:
          $ref: '#/components/schemas/TransactionHeader'
        name:
          description: Buyer request reference name
          type: string
        dueDate:
          description: Due Date for seller to respond with Inventory Information
          type: string
          format: date
        mediaOutlets:
          description: Array of mediaOutlet objects being requested
          type: array
          items:
            $ref: '#/components/schemas/MediaOutlet'
          minItems: 1
        buyer:
          $ref: '#/components/schemas/Buyer'
        advertiser:
          $ref: '#/components/schemas/Advertiser'
        contacts:
          description: Array of Contact objects
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        dayOfWeek:
          $ref: '#/components/schemas/DayOfWeek'
        timeWindows:
          type: array
          items:
            $ref: '#/components/schemas/TimeWindow'
        guidelines:
          description: Array of Guideline objects being requested
          type: array
          items:
            $ref: '#/components/schemas/Guideline'
        isPolitical:
          description: Indicate that rates requested are for a political campaign
          type: boolean
        inventoryTypes:
          description: ArrayList of InventoryTypes being requested
          type: array
          items:
            type: string
        currency:
          $ref: '#/components/schemas/Currency'
        externalComment:
          description: Free form text to accommodate transaction comments and/or activities outside the TIP flow
          type: string
        audienceSegments:
          description: Array of AudienceSegment objects being requested
          type: array
          items:
            $ref: '#/components/schemas/AudienceSegment'
          minItems: 1
        pricingMetricOptions:
          description: Array of PricingMetricsOption objects being requested
          type: array
          items:
            $ref: '#/components/schemas/PricingMetricOption'
        frequency:
          $ref: '#/components/schemas/Frequency'
        startDate:
          oneOf:
            - $ref: '#/components/schemas/DynamicDate'
            - type: string
              format: date
        endDate:
          oneOf:
            - $ref: '#/components/schemas/DynamicDate'
            - type: string
              format: date
      required:
        - transactionHeader
        - mediaOutlets
        - isPolitical
    SellerInventoryAvails:
      description: 'Schema defines the Seller response to previously solicited InventoryAvails request from the buyer, or if unsolicited provides the buyer with the catalog of selling products, and optionally provide pricing and audience information'
      properties:
        transactionHeader:
          $ref: '#/components/schemas/TransactionHeader'
        dateSubmitted:
          description: Seller's submit date for the response
          type: string
          format: date
        buyer:
          $ref: '#/components/schemas/Buyer'
        advertiser:
          $ref: '#/components/schemas/Advertiser'
        contacts:
          description: Array of Contacts
          type: array
          items:
            $ref: '#/components/schemas/Contact'
          minItems: 1
        rateCard:
          $ref: '#/components/schemas/RateCard'
        isPolitical:
          description: Indicates that pricing being supplied is political
          type: boolean
        mediaOutlets:
          description: Array of MediaOutlets contained in the InventoryAvails
          type: array
          items:
            $ref: '#/components/schemas/MediaOutlet'
          minItems: 1
        audienceSegments:
          description: Array of AudienceSegments contained in the InventoryAvails
          type: array
          items:
            $ref: '#/components/schemas/AudienceSegmentDetail'
          nullable: true
        availWindow:
          $ref: '#/components/schemas/DateWindow'
        salesElements:
          description: Array of SalesElements  contained in the InventoryAvails
          type: array
          items:
            $ref: '#/components/schemas/SalesElement'
          minItems: 1
      required:
        - transactionHeader
        - dateSubmitted
        - isPolitical
        - mediaOutlets
        - availWindow
        - salesElements
    BuyerRFPS:
      description: Schema allows the buyers is able to express the criteria that need to be met when responding with a proposal
      properties:
        transactionHeader:
          $ref: '#/components/schemas/TransactionHeader'
        referenceIds:
          description: Array of ReferenceId objects containing the RFP id and source references
          type: array
          items:
            $ref: '#/components/schemas/ReferenceId'
          minItems: 1
        dateSubmitted:
          description: RFP submission date
          type: string
          format: date
        dueDate:
          description: Response due date for proposal
          type: string
          format: date
        buyer:
          $ref: '#/components/schemas/Buyer'
        commission:
          description: Buyer commission percentage amount
          type: number
          format: float
          example: 15
        advertiser:
          $ref: '#/components/schemas/Advertiser'
        brand:
          $ref: '#/components/schemas/Brand'
        product:
          $ref: '#/components/schemas/Product'
        contacts:
          description: Array of Contact objects
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        currency:
          $ref: '#/components/schemas/Currency'
        budgets:
          type: array
          items:
            $ref: '#/components/schemas/Budget'
        timePeriodPreferences:
          description: Array of TimePeriod objects containing the buyer's preferences
          type: array
          items:
            $ref: '#/components/schemas/TimePeriod'
          minItems: 1
        marketPreferences:
          description: ArrayList of marketPreferences containing the buyer's preferences
          type: array
          items:
            type: string
            example:
              - Houston
              - Austin
        audiencePreferences:
          description: Array of AudienceSegment objects containing the buyer's preferences
          type: array
          items:
            $ref: '#/components/schemas/AudienceSegment'
        targetingPreferences:
          description: ArrayList of TargetingPreference containing the buyer's preferences
          type: array
          items:
            type: string
            example:
              - Auto Intenders
        frequencyPreferences:
          description: Array of FrequencyCapping objects containing the buyer's preferences
          type: array
          items:
            $ref: '#/components/schemas/FrequencyCapping'
        unitLengthPreferences:
          description: ArrayList of unitLengthsPreferences containing the buyer's preferences
          type: array
          items:
            type: integer
            example:
              - 30
              - 15
        guidelines:
          description: Array of Guideline objects containing the buyer's preferences
          type: array
          items:
            $ref: '#/components/schemas/Guideline'
        objective:
          description: KPI of the overall campaign
          type: string
        comments:
          description: Additional Information
          type: string
        campaignGoals:
          type: array
          items:
            $ref: '#/components/schemas/CampaignGoal'
      required:
        - transactionHeader
        - referenceIds
        - dateSubmitted
        - advertiser
        - contacts
        - timePeriodPreferences
    CampaignGoal:
      properties:
        distributionType:
          description: Indicates the distribution type for the goal; extended enum values are allowed
          type: string
          enum:
            - Media Outlet Type
            - Daypart
            - Market
            - Unit Length
            - AddedValue
            - Quarter
            - Month
            - Week
        distributionMethod:
          description: Distribution method elements; impressions or GRP distributions pertain to the primary audience segment; extended enum values are allowed
          type: string
          enum:
            - Impressions
            - GRPs
            - Units
            - Budget
        distributionName:
          description: 'Name associated to the distributionType; for example it could be MediaOutletType such as Local Broadcast TV, or a specific Daypart Name, or Specific Quarter Name, etc.'
          type: string
        distribution:
          description: Indicates if the distributionValue is a percentage or exact value
          type: string
          enum:
            - Percentage
            - Exact Value
        distributionValue:
          description: Distribution goal value
          type: number
          format: float
        distributionOrder:
          description: Populate when multiple distributions types are defined to define a nesting order for the distributions
          type: integer
          minimum: 0
        distributionOrderParent:
          description: Populate when multiple distributions to indicate the parent of a nesting order
          type: integer
          nullable: true
      required:
        - distributionType
        - distributionMethod
        - distributionName
        - distribution
        - distributionValue
        - distributionOrder
        - distributionOrderParent
    SellerProposals:
      description: Schema is shared between the buyers and seller to exchange information and maintain a trail of negotiations concerning proposals
      properties:
        transactionHeader:
          $ref: '#/components/schemas/TransactionHeader'
        referenceIds:
          description: Array of ReferenceId objects containing the proposal id and source references; may also contain originating RFP id and source references
          type: array
          items:
            $ref: '#/components/schemas/ReferenceId'
          minItems: 1
        expirationDate:
          description: Expiration date for proposal
          type: string
          format: date
        buyer:
          $ref: '#/components/schemas/Buyer'
        commission:
          description: Buyer commission percentage amount
          type: number
          format: float
        advertiser:
          $ref: '#/components/schemas/Advertiser'
        brand:
          $ref: '#/components/schemas/Brand'
        product:
          $ref: '#/components/schemas/Product'
        budgets:
          description: Array of Budget objects containing gross total budget and budget allocations
          type: array
          items:
            $ref: '#/components/schemas/Budget'
        cpeCode:
          $ref: '#/components/schemas/CpeCode'
        contacts:
          description: Array of Contact objects
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        revenueType:
          description: Indicates the type of payment; extended enum values are allowed
          type: string
          enum:
            - Cash
            - Barter
            - Trade
        businessType:
          description: Seller's defined business type for the proposal
          type: string
        localNational:
          description: Indicates the marketplace for the proposal; extended enum values are allowed
          type: string
          enum:
            - Local
            - National
        dealYear:
          description: Broadcast year for the proposal
          type: string
        billingOption:
          $ref: '#/components/schemas/BillingOption'
        isEquivalized:
          description: True/False; Indicates if the impressions are equivalized (weighted) down or up from a base 30-second unit using a ratio of the unit's length.
          type: boolean
        dateWindows:
          description: Array of DateWindow objects indicating the valid start and end dates; Hiatus dates are excluded
          type: array
          items:
            $ref: '#/components/schemas/DateWindow'
          minItems: 1
        cancellationTerms:
          description: Array of CancellationTerm objects outlining the proposal terms
          type: array
          items:
            $ref: '#/components/schemas/CancellationTerm'
        timeSeparations:
          description: Array of TimeSeparation objects outlining the commercial separation rules
          type: array
          items:
            $ref: '#/components/schemas/TimeSeparation'
        termsOfSales:
          description: 'Information specific to payment terms, preemption status, etc.'
          type: string
        externalComment:
          description: Free form text to accommodate transaction comments and/or activities outside the TIP flow
          type: string
        rateCard:
          $ref: '#/components/schemas/RateCard'
        currency:
          $ref: '#/components/schemas/Currency'
        mediaOutlets:
          description: Array of MediaOutlet objects being proposed
          type: array
          items:
            $ref: '#/components/schemas/MediaOutlet'
          minItems: 1
        audienceSegments:
          description: Array of AudienceSegment objects being proposed
          type: array
          items:
            $ref: '#/components/schemas/AudienceSegmentDetail'
        salesElements:
          description: Array of SalesElementsTransaction objects being proposed
          type: array
          items:
            $ref: '#/components/schemas/SalesElementTransaction'
      required:
        - transactionHeader
        - referenceIds
        - buyer
        - commission
        - contacts
        - revenueType
        - businessType
        - isEquivalized
        - dateWindows
        - mediaOutlets
    BuyerProposals:
      description: Schema is shared between the buyers and seller to exchange information and maintain a trail of negotiations concerning proposals
      properties:
        transactionHeader:
          $ref: '#/components/schemas/TransactionHeader'
        referenceIds:
          description: Array of ReferenceId objects containing the proposal id references; may also contain originating RFP id references
          type: array
          items:
            $ref: '#/components/schemas/ReferenceId'
          minItems: 1
        expirationDate:
          description: Expiration date for proposal
          type: string
          format: date
        buyer:
          $ref: '#/components/schemas/Buyer'
        commission:
          description: Buyer commission percentage amount
          type: number
          format: float
        advertiser:
          $ref: '#/components/schemas/Advertiser'
        brand:
          $ref: '#/components/schemas/Brand'
        product:
          $ref: '#/components/schemas/Product'
        budgets:
          description: Array of Budget objects containing total budget and budget allocations
          type: array
          items:
            $ref: '#/components/schemas/Budget'
        cpeCode:
          $ref: '#/components/schemas/CpeCode'
        contacts:
          description: Array of Contact objects
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        revenueType:
          description: Indicates the type of payment term; extended enum values are allowed
          type: string
          enum:
            - Cash
            - Barter
            - Trade
        businessType:
          description: Seller's defined business type for the proposal
          type: string
        localNational:
          description: Indicates the marketplace; extended enum values are allowed
          type: string
          enum:
            - Local
            - National
        dealYear:
          description: Broadcast year for the proposal being negotiated
          type: string
        billingOption:
          $ref: '#/components/schemas/BillingOption'
        isEquivalized:
          description: Indicates if the impressions are equivalized (weighted) down or up from a base 30-second unit using a ratio of the unit's length.
          type: boolean
        dateWindows:
          description: Array of DateWindow objects indicating the proposal's valid start and end dates; Hiatus dates are excluded
          type: array
          items:
            $ref: '#/components/schemas/DateWindow'
          minItems: 1
        cancellationTerms:
          description: Array of CancellationTerm Objects outlining terms
          type: array
          items:
            $ref: '#/components/schemas/CancellationTerm'
        timeSeparations:
          description: Array of TimeSeparation objects outlining terms
          type: array
          items:
            $ref: '#/components/schemas/TimeSeparation'
        termsOfSales:
          description: 'Information specific to payment terms, preemption status, etc.'
          type: string
        externalComment:
          description: Free form text to accommodate transaction comments and/or activities outside the TIP flow
          type: string
        rateCard:
          $ref: '#/components/schemas/RateCard'
        currency:
          $ref: '#/components/schemas/Currency'
        mediaOutlets:
          description: Array of MediaOutlet objects being proposed
          type: array
          items:
            $ref: '#/components/schemas/MediaOutlet'
          minItems: 1
        audienceSegments:
          description: Array of AudienceSegment objects being proposed
          type: array
          items:
            $ref: '#/components/schemas/AudienceSegmentDetail'
        salesElements:
          description: Array of SalesElementsTransaction objects being proposed
          type: array
          items:
            $ref: '#/components/schemas/SalesElementTransaction'
      required:
        - transactionHeader
        - referenceIds
        - buyer
        - commission
        - contacts
        - revenueType
        - businessType
        - isEquivalized
        - dateWindows
        - mediaOutlets
    BuyerOrders:
      description: 'Represent the data necessary to describe an order including terms, dates, products, media outlets in addition to all reference data'
      properties:
        transactionHeader:
          $ref: '#/components/schemas/TransactionHeader'
        referenceIds:
          description: Array of ReferenceId objects containing the order id and source references; may also contain originating RFP and Proposal id and source references
          type: array
          items:
            $ref: '#/components/schemas/ReferenceId'
          minItems: 1
        orderBookedDate:
          description: 'Date in which the buyer submitted the order, this is the original book date'
          type: string
          format: date
        buyer:
          $ref: '#/components/schemas/Buyer'
        commission:
          description: Buyer commission percentage amount
          type: number
          format: float
        advertiser:
          $ref: '#/components/schemas/Advertiser'
        brand:
          $ref: '#/components/schemas/Brand'
        product:
          $ref: '#/components/schemas/Product'
        budgets:
          description: Array of Budget objects containing gross total budget and budget allocations
          type: array
          items:
            $ref: '#/components/schemas/Budget'
        cpeCode:
          $ref: '#/components/schemas/CpeCode'
        contacts:
          description: Array of Contact objects
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        revenueType:
          description: Indicates the type of payment term for the order; extended enum values are allowed
          type: string
          enum:
            - Cash
            - Barter
            - Trade
        businessType:
          description: Defined business type for the order
          type: string
        localNational:
          description: Indicates the marketplace; extended enum values are allowed
          type: string
          enum:
            - Local
            - National
        dealYear:
          description: Broadcast year for the order
          type: string
        billingOption:
          $ref: '#/components/schemas/BillingOption'
        isEquivalized:
          description: Indicates if the impressions are equivalized (weighted) down or up from a base 30-second unit using a ratio of the unit's length
          type: boolean
        dateWindows:
          description: Array of DateWindow objects indicating the order's valid start and end dates; Hiatus dates are excluded
          type: array
          items:
            $ref: '#/components/schemas/DateWindow'
        cancellationTerms:
          type: array
          items:
            $ref: '#/components/schemas/CancellationTerm'
        timeSeparations:
          type: array
          items:
            $ref: '#/components/schemas/TimeSeparation'
        termsOfSales:
          description: 'Information specific to payment terms, preemption status, etc.'
          type: string
        externalComment:
          description: Free form text to accommodate transaction comments and/or activities outside the TIP flow
          type: string
        rateCard:
          $ref: '#/components/schemas/RateCard'
        currency:
          $ref: '#/components/schemas/Currency'
        mediaOutlets:
          description: Array of MediaOutlet objects being ordered
          type: array
          items:
            $ref: '#/components/schemas/MediaOutlet'
        audienceSegments:
          description: Array of AudienceSegment objects being ordered
          type: array
          items:
            $ref: '#/components/schemas/AudienceSegmentDetail'
        salesElements:
          description: Array of SalesElementsTransaction objects being ordered
          type: array
          items:
            $ref: '#/components/schemas/SalesElementTransaction'
      required:
        - transactionHeader
        - referenceIds
        - orderBookedDate
        - buyer
        - commission
        - contacts
        - revenueType
        - businessType
        - calendarType
        - isEquivalized
        - dateWindows
        - mediaOutlets
    BuyerCreativeAssets:
      description: Schema provides for the definition of creative assets including the format information
      properties:
        transactionHeader:
          $ref: '#/components/schemas/TransactionHeader'
        creative:
          description: Object that gives the details for the creative asset
          $ref: '#/components/schemas/Creative'
        timePeriods:
          type: array
          items:
            $ref: '#/components/schemas/TimePeriod'
        formats:
          type: array
          items:
            $ref: '#/components/schemas/Format'
        mediaOutlets:
          type: array
          items:
            $ref: '#/components/schemas/MediaOutlet'
        deliveryDate:
          description: Delivery date for receiving or making available the asset
          type: string
          format: date
        deliveryService:
          description: Type of delivery service that will supply the the asset
          type: string
        buyer:
          $ref: '#/components/schemas/Buyer'
        contacts:
          description: Array of contacts
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        advertiser:
          $ref: '#/components/schemas/Advertiser'
        brand:
          $ref: '#/components/schemas/Brand'
        product:
          $ref: '#/components/schemas/Product'
        guideLines:
          type: array
          items:
            $ref: '#/components/schemas/Guideline'
        comment:
          description: Free form text to accommodate transaction comments and/or activities outside the TIP flow
          type: string
      required:
        - transactionHeader
        - creative
        - timePeriods
        - deliveryDate
        - deliveryService
        - buyer
        - product
    BuyerCommercialInstructions:
      description: 'Schema provides for the definition of detailed Commercial Instructions including patterns, rotations, weight'
      properties:
        transactionHeader:
          $ref: '#/components/schemas/TransactionHeader'
        referenceIds:
          description: Array of ReferenceId objects containing the order id references; may also contain originating RFP and Proposal id references
          type: array
          items:
            $ref: '#/components/schemas/ReferenceId'
          minItems: 1
        buyer:
          $ref: '#/components/schemas/Buyer'
        contacts:
          description: Array of contact objects
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        advertiser:
          $ref: '#/components/schemas/Advertiser'
        product:
          $ref: '#/components/schemas/Product'
        dateWindow:
          $ref: '#/components/schemas/DateWindow'
        cpeCode:
          $ref: '#/components/schemas/CpeCode'
        instructionComment:
          description: Comments pertaining to overall instructions
          type: string
        externalComment:
          description: Free form text to accommodate transaction comments and/or activities outside the TIP flow
          type: string
        instructionType:
          description: Instruction Type associated to the instructions that applies to how the AD ID should be applied to units
          type: string
          enum:
            - Rotation Share
            - Pattern
            - Unit Specific
        instructionDetails:
          type: array
          items:
            $ref: '#/components/schemas/InstructionDetail'
      required:
        - transactionHeader
        - referenceIds
        - advertiser
        - product
        - dateWindow
        - instructionType
    InstructionDetail:
      description: Commercial Instruction details for instruction type
      properties:
        actionType:
          description: Action for the instruction detail
          type: string
          enum:
            - New
            - Change
            - Cancel
        inventoryTypes:
          type: array
          items:
            type: string
        mediaOutlet:
          $ref: '#/components/schemas/MediaOutlet'
        creative:
          $ref: '#/components/schemas/Creative'
        brand:
          $ref: '#/components/schemas/Brand'
        product:
          $ref: '#/components/schemas/Product'
        linkType:
          $ref: '#/components/schemas/LinkType'
        deliveryDate:
          description: Material copy delivery date
          type: string
          format: date
        deliveryService:
          description: Delivery service that will supply the the creative material
          type: string
        timePeriods:
          type: array
          items:
            $ref: '#/components/schemas/TimePeriod'
        rotationShare:
          description: 'If instruction type equals ''Rotation'', this will be the percentage assignment to be applied to each creativeId'
          type: integer
        patternInstruction:
          description: 'If instruction type equal ''Pattern'', this will be the pattern assignments to be applied to each creative; for example A,B,B,C represents how the creative  A, B and C should be sequentially assigned to units'
          type: string
        unitSpecificInstructions:
          description: 'If instruction type equal ''Unit Specific'', this will the list of unitIds that are valid for the creative'
          type: array
          items:
            type: string
        specialInstructions:
          description: Comments that pertain to the instruction details
          type: string
      required:
        - actionType
        - mediaOutlet
        - creative
        - deliveryService
    SellerLogtimes:
      description: Top level element for Logtimes Seller
      properties:
        transactionHeader:
          $ref: '#/components/schemas/TransactionHeader'
        externalComment:
          description: String that indicates additional information the seller can send to the buyer
          type: string
        mediaOutlets:
          description: Array of MediaOutlet objects
          type: array
          items:
            $ref: '#/components/schemas/MediaOutlet'
        units:
          description: Units listed in the API units can be defined by the system that is creating the API.
          type: array
          items:
            $ref: '#/components/schemas/Unit'
      required:
        - transactionHeader
        - mediaOutlets
        - units
    Unit:
      description: Unit detail information
      properties:
        unitId:
          description: Seller generated unique number for unit (ID will likely change if unit is moved to another week during recon process).
          type: string
        referenceIds:
          description: Array of ReferenceId objects containing the order id references; may also contain originating RFP and Proposal id and source references
          type: array
          items:
            $ref: '#/components/schemas/ReferenceId'
          minItems: 1
        lineReferences:
          description: Array of identifier objects to identify a line id and system source; note- once the identifier object has been adopted the goal is to remove existing lineNum and lineReference
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        cpeCode:
          $ref: '#/components/schemas/CpeCode'
        buyer:
          $ref: '#/components/schemas/Buyer'
        advertiser:
          $ref: '#/components/schemas/Advertiser'
        brand:
          $ref: '#/components/schemas/Brand'
        product:
          $ref: '#/components/schemas/Product'
        salesElementHeader:
          $ref: '#/components/schemas/SalesElementHeader'
        program:
          description: This indicates the program the spot aired in -  'as-aired' information
          type: string
        daypart:
          description: This indicates the daypart the spot aired in -  'as-aired' information
          type: string
        inventoryType:
          description: 'Type of advertising such as a commercial, billboard or other types of advertisement'
          type: string
        linkType:
          $ref: '#/components/schemas/LinkType'
        isMakegood:
          description: Indicates if the spot is a makegood
          type: boolean
        isAdu:
          description: Audience Deficiency Unit; Units of commercial advertising inventory made available to advertisers as fulfillment for the inventory the advertisers purchased that ran in programs that under-delivered on contracted audience demographic ratings
          type: boolean
        preemptUnitIds:
          description: ArrayList of the 'original' preempted unit being resolved when the isMakegood indicator is 'Y';  a makegood unit may be resolved by one too many preempt spots
          type: array
          items:
            type: string
        isBonus:
          description: '$0 (i.e., free) ad impressions/pricing that a publisher includes with paid media to maximize the overall proposal/order'
          type: boolean
        airedLength:
          description: Length of commercial unit
          type: integer
        bookedLength:
          description: Actual lenth of commerical unit
          type: integer
        rate:
          description: Gross unit rate
          type: number
          format: float
        creative:
          $ref: '#/components/schemas/Creative'
        status:
          description: Indicated the airing status for the spot Aired  = 'as-aired' reconciliation for the spot is complete No Run = spot either did not run or didn't run as contracted when the broadcast log was played out Scheduled  = spot is placed on a pre log that has not yet been played out Finalized = spot is placed on a log that is in a 'final status' and ready to be played out and the spot is locked from edits Not Scheduled = spot has not yet been placed on a future broadcast log Preempted = spot has been removed from a future broadcast log; the buyer will be offered a makegood or issued a credit
          type: string
          enum:
            - Aired
            - Scheduled
            - No Run
            - Finalized
            - Not Scheduled
            - Preempted
        isCredit:
          description: Indicate if the spot was issued a credit due to a discrepancy
          type: boolean
        timePeriods:
          description: Array of TimePeriod objects indicating SalesElement ordered day and time period constraints
          type: array
          items:
            $ref: '#/components/schemas/TimePeriod'
        dateTime:
          description: Not required when unit's status is 'No Run'
          $ref: '#/components/schemas/DateTime'
        childUnits:
          description: Array of ChildUnit objects
          type: array
          items:
            $ref: '#/components/schemas/ChildUnit'
      required:
        - unitId
        - referenceIds
        - lineReferences
        - advertiser
        - product
        - salesElementHeader
        - airedLength
        - status
    ChildUnit:
      description: 'Child unit details for footprint unit to support Audience Network, Diginet or other forms of ''child'' units'
      properties:
        unitId:
          description: Seller generated identifier for the child spot; conditional when there is a 'parent' unit is sold as a footprint
          type: string
        salesElementHeader:
          $ref: '#/components/schemas/SalesElementHeader'
        rate:
          description: Gross unit rate
          type: number
          format: float
        creative:
          description: Array of identifier objects containing the creative information; at  least one identifier object must be provided if spot status is equal to 'Aired' or 'Finalized'
          $ref: '#/components/schemas/Creative'
        status:
          description: Indicated the airing status for the spot - Aired  = 'as-aired' reconciliation for the spot is complete No Run = spot either did not run or didn't run as contracted when the broadcast log was played out Scheduled  = spot is placed on a pre log that has not yet been played out Finalized = spot is placed on a log that is in a 'final status' and ready to be played out and the spot is locked from edits Not Scheduled = spot has not yet been placed on a future broadcast log Preempted = spot has been removed from a future broadcast log; the buyer will be offered a makegood or issued a credit
          type: string
          enum:
            - Aired
            - Scheduled
            - No Run
            - Finalized
            - Not Scheduled
            - Preempted
        dateTime:
          description: Required if the child's unit is equal to 'Aired'
          $ref: '#/components/schemas/DateTime'
      required:
        - unitId
        - salesElementHeader
    BuyerImpressionsSubscribe:
      description: 'Schema supports a notification format that allows the buyer to define the parameters for the impressions payload such as frequency, time span, orders, etc.'
      properties:
        name:
          description: Free form text as a name for this subscription
          type: string
        transactionHeader:
          $ref: '#/components/schemas/TransactionHeader'
        mediaOutlets:
          description: Unique list of Media Outlets including the Seller entity and all Content where impressions occurred
          type: array
          items:
            $ref: '#/components/schemas/MediaOutlet'
          minItems: 1
        salesElementHeaders:
          description: Unique list of SalesElements related to the impression included in the message
          type: array
          items:
            $ref: '#/components/schemas/SalesElementHeader'
          minItems: 1
        referenceIds:
          description: 'referenceId must contain a minimum of one item. A list of identifying information regarding order, proposal, and RFP related to the impressions included in the message'
          type: array
          items:
            $ref: '#/components/schemas/ReferenceId'
          minItems: 1
        frequency:
          $ref: '#/components/schemas/Frequency'
        startDate:
          oneOf:
            - $ref: '#/components/schemas/DynamicDate'
            - type: string
              format: date
        endDate:
          oneOf:
            - $ref: '#/components/schemas/DynamicDate'
            - type: string
              format: date
        statSource:
          description: Identifies the originating impressions tracking source if all impressions have the same tracking source. The combination of StatSource and MediaOutlet identifies a unique impression.
          type: string
        maxChunkSize:
          description: Suggestion to limit size of chunks to maxChunkSize in MB
          type: integer
      required:
        - name
        - transactionHeader
    SellerImpressions:
      description: Schema supports an asynchronous response to a subscription informing the buyer that a new delivery of Impressions is ready to download
      properties:
        transactionHeader:
          $ref: '#/components/schemas/TransactionHeader'
        mediaOutlets:
          description: Unique list of Media Outlets including the Seller entity and all Content where impressions occurred
          type: array
          items:
            $ref: '#/components/schemas/MediaOutlet'
          minItems: 1
        salesElementHeaders:
          description: Unique list of SalesElements related to the impression included in the message
          type: array
          items:
            $ref: '#/components/schemas/SalesElementHeader'
          minItems: 1
        referenceIds:
          description: 'referenceId must contain a minimum of one item. A list of identifying information regarding order, proposal, and RFP related to the impressions included in the message'
          type: array
          items:
            $ref: '#/components/schemas/ReferenceId'
          minItems: 1
        creatives:
          description: List of all creatives delivered against. This object may expand with further metadata about the creative
          type: array
          items:
            $ref: '#/components/schemas/Creative'
          minItems: 1
        reportDate:
          $ref: '#/components/schemas/DateWindow'
        statSource:
          description: Identifies the originating impressions tracking source if all impressions have the same tracking source. The combination of StatSource and MediaOutlet identifies a unique impression.
          type: string
        filePrefix:
          description: Prefix for file name collection in the notification
          type: string
        chunks:
          description: Number of chunks associated with the notification
          type: integer
      required:
        - transactionHeader
        - mediaOutlets
        - salesElementHeaders
        - referenceIds
        - creatives
        - reportDate
        - statSource
        - filePrefix
        - chunks
    SellerAudiences:
      description: A representation of the Actual Audience delivery information for comparison against contract delivery goals
      properties:
        transactionHeader:
          $ref: '#/components/schemas/TransactionHeader'
        buyer:
          $ref: '#/components/schemas/Buyer'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        mediaOutlets:
          type: array
          items:
            $ref: '#/components/schemas/MediaOutlet'
        audienceSegments:
          type: array
          items:
            $ref: '#/components/schemas/AudienceSegmentDetail'
        externalComment:
          description: String that indicates additional information the seller may send to the the buyer
          type: string
        audienceDetails:
          type: array
          items:
            $ref: '#/components/schemas/AudienceDetail'
      required:
        - transactionHeader
        - mediaOutlets
        - audienceDetails
    AudienceDetail:
      description: Audience detail information
      properties:
        detailType:
          description: Determines the type of details; Unit-Based buy should i include linear unit spot details
          type: string
          enum:
            - Unit-Based
            - Audience-Based
        dateType:
          type: string
          enum:
            - Hour
            - Day
            - Week
            - Month
            - Quarter
        calendarType:
          description: Differentiates between OTT using Calendar and Linear using Broadcast Calendar.
          type: string
          enum:
            - Broadcast
            - Calendar
        dateWindow:
          $ref: '#/components/schemas/DateWindow'
        referenceIds:
          description: Array of ReferenceId objects containing the order id references; may also contain originating RFP and Proposal id references
          type: array
          items:
            $ref: '#/components/schemas/ReferenceId'
          minItems: 1
        cpeCode:
          $ref: '#/components/schemas/CpeCode'
        advertiser:
          $ref: '#/components/schemas/Advertiser'
        brand:
          $ref: '#/components/schemas/Brand'
        product:
          $ref: '#/components/schemas/Product'
        salesElementHeader:
          $ref: '#/components/schemas/SalesElementHeader'
        daypart:
          description: as-aired sellers daypart name
          type: string
        inventoryType:
          type: string
        length:
          type: integer
        pricingMetric:
          $ref: '#/components/schemas/PricingMetric'
        unitCount:
          description: Number of 'units' either in spots or impressions
          type: integer
          minimum: 0
        audienceTargets:
          type: array
          items:
            $ref: '#/components/schemas/AudienceTarget'
        audiencePricingMetrics:
          type: array
          items:
            $ref: '#/components/schemas/AudiencePricingMetric'
        unitDetails:
          type: array
          items:
            $ref: '#/components/schemas/AudienceUnitDetail'
      required:
        - detailType
        - dateType
        - calendarType
        - dateWindow
        - referenceIds
        - advertiser
        - product
        - salesElementHeader
    AudienceUnitDetail:
      description: Audience detail information for the individual linear units; this is optional information when the audience detailType is equal to Unit
      properties:
        unitId:
          description: Seller generated unique number - Required when unit type is equal to units
          type: string
        creative:
          $ref: '#/components/schemas/Creative'
        dateTime:
          $ref: '#/components/schemas/DateTime'
        rate:
          description: Contracted rate associated to the unit
          type: number
          format: float
        audiencePricingMetrics:
          type: array
          items:
            $ref: '#/components/schemas/AudiencePricingMetric'
        comment:
          description: Overall comments associated to the unit
          type: string
        childUnits:
          type: array
          items:
            $ref: '#/components/schemas/AudienceChildUnitDetail'
      required:
        - unitId
        - creative
        - audiencePricingMetrics
    AudienceChildUnitDetail:
      description: 'Child unit details for footprint unit to support Audience Network, Diginet or other forms of ''child'' units'
      properties:
        unitId:
          description: Unique identifier for 'child' unit; Required if unit was sold as a cluster of units
          type: string
        mediaOutlet:
          description: Required if ParentUnitId is populated
          $ref: '#/components/schemas/MediaOutlet'
        creative:
          $ref: '#/components/schemas/Creative'
        dateTime:
          description: Required if the child's unit is equal to 'Aired'
          $ref: '#/components/schemas/DateTime'
        rate:
          description: Unit rate associated to the 'child' unit
          type: number
          format: float
        audiencePricingMetrics:
          type: array
          items:
            $ref: '#/components/schemas/AudiencePricingMetric'
        comment:
          description: Overall comment for the unit
          type: string
      required:
        - creative
        - audiencePricingMetrics
    BuyerAudiencesSubscription:
      description: Schema allows the buyer to formulate a query for audience post buy information that meet the listed conditions
      properties:
        transactionHeader:
          $ref: '#/components/schemas/TransactionHeader'
        name:
          description: Buyer request reference name
          type: string
        referenceIds:
          description: Array of ReferenceId objects containing the order id references; may also contain originating RFP and Proposal id and source references
          type: array
          items:
            $ref: '#/components/schemas/ReferenceId'
          minItems: 1
        mediaOutlets:
          description: Array of mediaOutlet objects being requested
          type: array
          items:
            $ref: '#/components/schemas/MediaOutlet'
          minItems: 1
        buyer:
          type: array
          items:
            $ref: '#/components/schemas/Buyer'
        advertiser:
          type: array
          items:
            $ref: '#/components/schemas/Advertiser'
        contacts:
          description: Array of Contact objects
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        audienceTargets:
          description: Array of AudienceTarget objects
          type: array
          items:
            $ref: '#/components/schemas/AudienceTarget'
        audienceSegments:
          description: Array of AudienceSegment objects being requested
          type: array
          items:
            $ref: '#/components/schemas/AudienceSegment'
          minItems: 1
        externalComment:
          description: Free form text to accommodate transaction comments and/or activities outside the TIP flow
          type: string
        frequency:
          $ref: '#/components/schemas/Frequency'
        startDate:
          oneOf:
            - $ref: '#/components/schemas/DynamicDate'
            - type: string
              format: date
        endDate:
          oneOf:
            - $ref: '#/components/schemas/DynamicDate'
            - type: string
              format: date
      required:
        - transactionHeader
        - name
    SellerMakegoodGuidelines:
      description: Schema allows seller to request Makegood Guidelines
      properties:
        transactionHeader:
          $ref: '#/components/schemas/TransactionHeader'
        dateSubmitted:
          description: Seller submit date for makegood guidelines
          type: string
          format: date
        dueDate:
          description: Due date for buyer to respond with their guidelines
          type: string
          format: date
        mediaOutlet:
          $ref: '#/components/schemas/MediaOutlet'
        referenceIds:
          description: Array of ReferenceId objects containing the order id references; may also contain originating RFP and Proposal id references
          type: array
          items:
            $ref: '#/components/schemas/ReferenceId'
        cpeCode:
          $ref: '#/components/schemas/CpeCode'
        buyer:
          $ref: '#/components/schemas/Buyer'
        advertiser:
          $ref: '#/components/schemas/Advertiser'
        makegoodType:
          description: Type(s) of makegood guidelines being requested. The request may contain one or both makegood types
          type: string
          enum:
            - Resolve preemption
            - Audience Underdelivery
      required:
        - transactionHeader
        - dateSubmitted
        - buyer
        - makegoodType
    BuyerMakegoodGuidelines:
      description: Schema provides buyer's list of updated makegood guidelines to seller before and during a campaign
      properties:
        transactionHeader:
          $ref: '#/components/schemas/TransactionHeader'
        mediaOutlet:
          $ref: '#/components/schemas/MediaOutlet'
        referenceIds:
          description: Array of ReferenceId objects containing the order id references; may also contain originating RFP and Proposal id and source references
          type: array
          items:
            $ref: '#/components/schemas/ReferenceId'
        cpeCode:
          $ref: '#/components/schemas/CpeCode'
        buyer:
          $ref: '#/components/schemas/Buyer'
        advertiser:
          $ref: '#/components/schemas/Advertiser'
        makegoodGuidelines:
          type: array
          items:
            $ref: '#/components/schemas/MakegoodGuideline'
          minItems: 1
      required:
        - transactionHeader
        - buyer
        - makegoodGuidelines
    MakegoodGuideline:
      description: Makegood Guidelines Details
      properties:
        makegoodType:
          description: Type of Offer
          type: string
          enum:
            - Resolve preemption
            - Audience Underdelivery
        salesElementOriginal:
          $ref: '#/components/schemas/SalesElementHeader'
        salesElementEquivalent:
          description: Sales Element (Programming) Acceptance Rule Elements
          type: string
          enum:
            - Same Sales Element
            - Alternate Sales Element
        makegoodTargetAudienceLimit:
          description: Percent of the total original primary audience that can be delivered as makegoods. This is a target goal rather than a contractual limit. For audience underdelivery no Audience Limit is needed.
          type: number
          format: float
        makegoodRatio:
          description: Maximum number of makegood spots allowed to resolve preempt/missed unit -
          type: integer
        makegoodWindow:
          description: Rule defined for makegood window to resolve preempt/missed unit
          type: string
          enum:
            - Original Broadcast Week
            - Original Broadcast Month
            - Within Flight Dates
        externalComment:
          description: Free form text to accommodate transaction comments and/or activities outside the TIP flow
          type: string
      required:
        - makegoodType
        - salesElementEquivalent
    SellerMakegoodOffers:
      description: Seller Makegood offer Model allows the seller to communicate the proposed changes to an existing and runnin ad compaign
      properties:
        transactionHeader:
          $ref: '#/components/schemas/TransactionHeader'
        referenceIds:
          description: Array of ReferenceId objects containing the order id references; may also contain originating RFP and Proposal id references
          type: array
          items:
            $ref: '#/components/schemas/ReferenceId'
        makegoodType:
          description: Type of Makegood Offer
          type: string
          enum:
            - Resolve preemption
            - Audience Underdelivery
        externalComment:
          description: Free form text to accommodate transaction comments and/or activities outside the TIP flow
          type: string
        preemptDetails:
          description: Array of preempt details; Required when makegood type is equal to Resolve Preemptions
          type: array
          items:
            $ref: '#/components/schemas/PreemptDetail'
          minItems: 0
        makegoodDetails:
          type: array
          items:
            $ref: '#/components/schemas/MakegoodOfferDetail'
          minItems: 1
      required:
        - transactionHeader
        - referenceIds
        - makegoodType
        - makegoodDetails
    PreemptDetail:
      description: Preempt details
      properties:
        preemptNum:
          type: string
        salesElement:
          $ref: '#/components/schemas/SalesElementTransaction'
        preemptReason:
          description: Free form text to accommodate transaction comments and/or activities outside the TIP flow
          type: string
        makegoodNumLinks:
          description: List of makegoodNum proposed to substitute for this preempt
          type: array
          items:
            type: integer
      required:
        - preemptNum
    MakegoodOfferDetail:
      description: Packages common makegood attributes into single object
      properties:
        makegoodNum:
          description: Unique ID associated to makegood offer
          type: integer
        salesElement:
          $ref: '#/components/schemas/SalesElementTransaction'
        makegoodReason:
          description: Free form text to accommodate transaction comments and/or activities outside the TIP flow
          type: string
        makegoodAssumedConfirm:
          description: Makegood is 'assumed confirmed' based on buyer-seller discussions made outside of framework. Booked indicates the seller has originated placement in the traffic system. If no action is taken the spot will air. This field indicates the urgency to take action. 'Not Booked' - 'Booked' - Spot has already been placed in traffic system
          type: string
          enum:
            - Booked
            - Not Booked
        preemptNumLinks:
          description: List of preemptNum being replaced by this makegood.
          type: array
          items:
            type: integer
      required:
        - makegoodNum
        - salesElement
    BuyerMakegoodOffers:
      description: Alias to Generic CancelConfirmRecallReject Object
      properties:
        transactionHeader:
          $ref: '#/components/schemas/TransactionHeader'
        referenceIds:
          description: Array of ReferenceId objects containing the order id references; may also contain originating RFP and Proposal id references
          type: array
          items:
            $ref: '#/components/schemas/ReferenceId'
          minItems: 1
        comments:
          description: Free form comments
          type: string
      required:
        - transactionHeader
    SellerInvoices:
      description: Invoice schema
      properties:
        transactionHeader:
          $ref: '#/components/schemas/TransactionHeader'
        referenceIds:
          description: 'Array of ReferenceId objects containing the invoice id and source references; may also contain originating RFP, Proposal and Order id and source references'
          type: array
          items:
            $ref: '#/components/schemas/ReferenceId'
          minItems: 1
        invoiceDate:
          description: Original Invoice Date
          type: string
          format: date
        invoiceRevisionDate:
          description: Invoice revision Date; Required for a change transaction
          type: string
          format: date
        billingOption:
          $ref: '#/components/schemas/BillingOption'
        dueDate:
          description: Payment due date
          type: string
          format: date
        dateWindow:
          $ref: '#/components/schemas/DateWindow'
        businessType:
          description: Defined business type on order
          type: string
        buyer:
          $ref: '#/components/schemas/Buyer'
        localNational:
          description: Indicates the order's marketplace; extended enum values are allowed
          type: string
          enum:
            - Local
            - National
        advertiser:
          $ref: '#/components/schemas/Advertiser'
        contacts:
          description: Array of contact objects
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        revenueType:
          description: Indicates the payment term; extended enum values are allowed
          type: string
          enum:
            - Cash
            - Barter
            - Trade
        grossAmount:
          description: Total gross value amount
          type: number
          format: float
        commission:
          description: Buyer commission amount
          type: number
          format: float
        salesTaxes:
          description: Total sales tax when applicable
          type: array
          items:
            $ref: '#/components/schemas/ItemDetail'
        discounts:
          description: Total discount when applicable
          type: array
          items:
            $ref: '#/components/schemas/ItemDetail'
        netAmount:
          description: Total net value amount  (total grossvalue  amount– commission amount- discount + sales tax)
          type: number
          format: float
        currency:
          $ref: '#/components/schemas/Currency'
        remittanceInfo:
          $ref: '#/components/schemas/RemittanceInfo'
        mediaOutlets:
          description: Array of MediaOutlet objects being ordered
          type: array
          items:
            $ref: '#/components/schemas/MediaOutlet'
        externalComment:
          description: Free form text to accommodate transaction comments and/or activities outside the TIP flow
          type: string
        lineDetails:
          description: Array of LineDetail objects
          type: array
          items:
            $ref: '#/components/schemas/LineDetail'
      required:
        - transactionHeader
        - referenceIds
        - invoiceDate
        - dateWindow
        - buyer
        - advertiser
        - revenueType
        - grossAmount
        - commission
        - netAmount
        - remittanceInfo
        - mediaOutlets
        - lineDetails
    LineDetail:
      description: Line Detail Information
      properties:
        lineNum:
          description: Supplier's generated line number/id
          type: string
        lineReference:
          description: Additional reference for the supplier's line number such as line num from an external system source
          type: string
        lineReferences:
          description: Array of identifier objects to identify a line id and system source; note- once the identifier object has been adopted the goal is to remove existing lineNum and lineReference
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        type:
          description: Indicates the type of invoice line; A Spot type requires spot details
          type: string
          enum:
            - Spot
            - Audience
            - Flat Rate
        brand:
          $ref: '#/components/schemas/Brand'
        product:
          $ref: '#/components/schemas/Product'
        salesElementHeader:
          $ref: '#/components/schemas/SalesElementHeader'
        inventoryType:
          description: 'Type of advertising such as a commercial, billboard or other forms of advertisement'
          type: string
        timePeriod:
          description: Array of TimePeriod objects indicating SalesElement ordered day and time period constraints
          type: array
          items:
            $ref: '#/components/schemas/TimePeriod'
        length:
          description: Length of commercial unit
          type: integer
        cpeCode:
          $ref: '#/components/schemas/CpeCode'
        billableCosts:
          description: Indicates if the gross and net costs are booked or earned revenues calculated from the actual impression delivery; extended enum values are allowed
          type: string
          enum:
            - Booked
            - Actuals
        pricingMetric:
          $ref: '#/components/schemas/PricingMetric'
        grossCost:
          description: Gross value amount for the unit count across the date window
          type: number
          format: float
          example: 150
        netCost:
          description: Gross value amount minus any fixed advertising agency commission or compensation
          type: number
          format: float
          example: 127.5
        audienceTargets:
          type: array
          items:
            $ref: '#/components/schemas/AudienceTarget'
        unitCount:
          description: Number of units either in linear television spots or audience impressions
          type: integer
          format: int64
          minimum: 0
        unitDetails:
          description: Array of Unit Detail associated to the line detail
          type: array
          items:
            $ref: '#/components/schemas/UnitDetail'
      required:
        - lineNum
        - type
        - product
        - salesElementHeader
        - length
        - grossCost
        - netCost
    UnitDetail:
      description: Unit details information (required for 'Spot' type)
      properties:
        unitId:
          description: Seller generated unique number for a linear television spot
          type: string
        creative:
          $ref: '#/components/schemas/Creative'
        dateTime:
          $ref: '#/components/schemas/DateTime'
        podPosition:
          $ref: '#/components/schemas/InventoryPosition'
        linkType:
          $ref: '#/components/schemas/LinkType'
        isPreempt:
          description: True/False
          type: boolean
        isMakegood:
          description: True/False
          type: boolean
        isAdu:
          description: True/False
          type: boolean
        isBonus:
          description: True/False
          type: boolean
        grossRate:
          description: the billed rate associated to the unit
          type: number
          format: float
        isCredit:
          description: True/False
          type: boolean
        adjustmentReason:
          description: 'Only valid on invoice revisions – reason for change of unit, example data; rate adjustment, incorrect copy'
          type: string
        comment:
          description: Overall comment for the unit
          type: string
        childUnitDetails:
          type: array
          items:
            $ref: '#/components/schemas/ChildUnitDetail'
      required:
        - creative
    ChildUnitDetail:
      description: 'Child unit details for parent unit to support Mirror, Audience Network, Diginet or other forms of ''child'' units'
      properties:
        unitId:
          description: Seller generated identifier for the child spot; conditional when there is a 'parent' unit is sold as a footprint
          type: string
        salesElementHeader:
          $ref: '#/components/schemas/SalesElementHeader'
        grossRate:
          description: Unit rate associated to the 'child' unit
          type: number
          format: float
        creative:
          description: Ad-ID assigned to 'child' unit
          $ref: '#/components/schemas/Creative'
        isPreempt:
          type: boolean
        isMakegood:
          type: boolean
        isAdu:
          type: boolean
        isCredit:
          type: boolean
        adjustmentReason:
          description: 'Only valid on invoice revisions – reason for change of unit, example data; rate adjustment, incorrect copy'
          type: string
        dateTime:
          $ref: '#/components/schemas/DateTime'
      required:
        - salesElementHeader
        - creative
  responses:
    Success:
      description: 200 OK - request accepted successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AcceptedResponse'
    Accepted:
      description: 'Accepted - request accepted, Actual response will follow at later time'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AcceptedResponse'
    BadRequest:
      description: Bad Request - payload is ill formed or contains invalid data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            errorCode: 400
            errorMessage: Bad Request - payload is ill formed or contains invalid data
    Unauthorized:
      description: 'Unauthorized - Unauthorized, invalid credentials or expired access token'
      headers:
        WWW-Authenticate:
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            errorCode: 401
            errorMessage: 'Unauthorized, invalid credentials or expired access token'
    Forbidden:
      description: 'Forbidden, additional previliges are needed'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            errorCode: 403
            errorMessage: 'Forbidden, additional previliges are needed'
    NotFound:
      description: 'Not Found, Requested entity does not exist'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            errorCode: 404
            errorMessage: Requested entity does not exist
    NotAllowed:
      description: 'Not Allowed, Requested operation is not allowed on entity'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            errorCode: 405
            errorMessage: Requested operation is not allowed on entity
    Unexpected:
      description: Unexpected error occured
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            errorCode: 500
            errorMessage: Unexpected error Occured
